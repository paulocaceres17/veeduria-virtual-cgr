{"version":3,"sources":["data/params.js","components/estudiante/ListadoEstudiantesScreen.js","icons/TextSnippet.js","styles/setTheme.js","components/formato/MobileStyle.js","components/formato/controles/Avatar.js","components/formato/controles/RadioGroup.js","components/formato/controles/CheckboxGroup.js","components/formato/controles/Select.js","components/formato/controles/Textbox.js","components/formato/controles/ComboCheckbox.js","components/formato/BrowserStyle.js","types/preguntaTypes.js","components/formato/controles/Disabled.js","components/formato/BrowserScreen.js","redux/actions/preguntaActions.js","components/formato/FormatoScreen.js","components/estudiante/RegistroEstudianteStyle.js","types/ubigeoTypes.js","redux/actions/ubigeoActions.js","controls/Mensaje.js","logErrors.js","helpers/apiCall.js","helpers/ubigeoHelper.js","helpers/urlBase.js","controls/TextNumber.js","types/instEducativaTypes.js","redux/actions/instEducativaActions.js","helpers/institucionHelper.js","redux/thunk/instEducativaThunk.js","components/estudiante/registroEstudianteProfile.js","helpers/preguntaHelper.js","types/formatoTypes.js","helpers/formatoHelper.js","helpers/veeduriaHelper.js","types/veeduriaTypes.js","controls/Proceso.js","types/estudianteTypes.js","helpers/estudianteHelper.js","redux/thunk/estudianteThunk.js","redux/actions/estudianteActions.js","controls/Confirmacion.js","controls/Alerta.js","components/estudiante/RegistroEstudianteScreen.js","redux/thunk/formatoThunk.js","redux/actions/formatoActions.js","redux/thunk/preguntaThunk.js","redux/thunk/veeduriaThunk.js","redux/actions/veeduriaActions.js","redux/thunk/ubigeoThunk.js","types/padreTypes.js","redux/actions/padreActions.js","helpers/padreHelper.js","components/padre/RegistroPadreStyle.js","components/padre/registroPadreProfile.js","types/captchaTypes.js","helpers/captchaHelper.js","redux/thunk/captchaThunk.js","redux/actions/captchaActions.js","components/padre/RegistroPadreScreen.js","redux/thunk/padreThunk.js","App.js","states/padreState.js","states/captchaState.js","states/ubigeoState.js","states/instEducativaState.js","states/estudianteState.js","states/preguntaState.js","states/veeduriaState.js","states/formatoState.js","redux/store/store.js","redux/reducers/padreReducer.js","redux/reducers/captchaReducer.js","redux/reducers/ubigeoReducer.js","redux/reducers/instEducativaReducer.js","redux/reducers/estudianteReducer.js","redux/reducers/preguntaReducer.js","redux/reducers/veeduriaReducer.js","redux/reducers/formatoReducer.js","index.js"],"names":["niveles","cod","des","grados_primaria","grados_secundaria","secciones","makeStyles","theme","table","minWidth","withStyles","root","padding","head","backgroundColor","palette","bg_head","color","common","black","body","fontSize","TableCell","bg_group","TableRow","action","hover","warning","main","RemoveRedEyeIcon","success","props","SvgIcon","d","createData","name","calories","fat","carbs","protein","createMuiTheme","primary","red","avatar","subAvatar","secondary","blue","yellow","green","error","grey","width","button","marginTop","spacing","marginRight","actionsContainer","marginBottom","resetContainer","center_item","margin","dividerInset","formControl","small","height","white","smallText","fontWeight","MuiStepper","AvatarControl","clase","numero","sizeText","Avatar","className","Typography","RadioGroupControl","respuestas","preg","handleChange","FormControl","component","RadioGroup","row","ID","onChange","e","filter","rpta","ID_PREGUNTA","map","FormControlLabel","value","control","Radio","label","DESCRIPCION","CheckboxGroupControl","FormGroup","Checkbox","options","id","SelectControl","classes","InputLabel","Select","MenuItem","key","TextboxControl","TextField","textField","size","RESPUESTA","ComboCheckboxControl","MenuProps","multiSelect","multiple","input","Input","renderValue","selected","arrDes","forEach","element","push","split","join","checked","indexOf","ListItemText","useStyles","orange","orangeMobile","smallMobile","textBrowser","textMobile","Accordion","border","boxShadow","borderBottom","display","expanded","MuiAccordion","AccordionSummary","minHeight","content","MuiAccordionSummary","AccordionDetails","MuiAccordionDetails","preguntaTypes","DisabledControl","Fab","disabled","variant","BrowserScreen","dispatch","useDispatch","useSelector","state","pregunta","grupos","preguntas","dependencias","useState","setValue","habilita","listaDependencias","event","preguntaId","console","log","target","cantRespuestasVacias","TIPO_RPTA_COD","setDependencias","length","IND_PADRE","HABILITADO","type","payload","isComplete","valor","ID_RESPUESTA","toString","DEPENDENCIA","PaperProps","style","maxHeight","ITEM_HEIGHT","forceVisible","autoHide","grupo","square","aria-controls","GRUPO_COD","ID_PADRE","isBrowser","CODIGO","hijo","index","class","Divider","title","marginLeft","flex","typography","pxToRem","fontWeightRegular","toolbar","paddingLeft","paddingRight","FormatoScreen","position","AppBar","heading","icon","detalle","classOne","textTransform","wrapper","fieldProgress","top","left","autocompleteProgress","form","StyledAccordionSummary","StyledAccordionActions","AccordionActions","ubigeoTypes","resetDistritos","Mensaje","text","Swal","fire","MessagesError","logErrors","errorModel","Type","Message","TypeError","RangeError","EvalError","Headers","apiCall","method","url","data","headers","axios","qs","stringify","listar_regiones","a","urlBase","resp","response","Success","listar_provincias","region","listar_distritos","provincia","FORMATOS","TextNumber","inputRef","other","format","getInputRef","onValueChange","values","isNumericString","prefix","institucionTypes","resetInstituciones","listar_instituciones","distrito","nivel","getInstitucionesBD","getState","Validacion","message","severity","Data","err","ProfileSchema","Yup","shape","nombre","required","apellido_paterno","apellido_materno","dni","min","max","grado","nullable","seccion","inst_educativa","formato","listar_preguntas","formatoTypes","listar_formatos","insertar_veeduria","veeduriaTypes","ProcesoStart","allowOutsideClick","onBeforeOpen","showLoading","ProcesoEnd","close","estudianteTypes","validaDNI","estudiante","validarDNI","valida_DNI","ConfirmControl","onSubmit","onClose","open","Dialog","disableBackdropClick","disableEscapeKeyDown","maxWidth","aria-labelledby","DialogTitle","DialogContent","dividers","List","role","ListItem","divider","DialogActions","Button","autoFocus","onClick","Alerta","Alert","handleClose","vertical","horizontal","Snackbar","autoHideDuration","anchorOrigin","AlertTitle","require","RegistroEstudianteScreen","padre","regiones","provincias","distritos","instituciones","formatos","veeduria","setexpanded","alert","setAlert","handleCloseAlert","messageActive","useRef","useEffect","current","setTimeout","handleReload","getPreguntas","MyField","setFieldValue","useFormikContext","useField","field","meta","isCurrent","isLoading","fullWidth","helperText","touched","Boolean","InputProps","inputComponent","CircularProgress","window","location","reload","React","setOpen","handleClickListItem","newValue","initialValues","validate","errors","validationSchema","setSubmitting","resetForm","REGION_COD","PROVINCIA_COD","DISTRITO_COD","CUI","insertVeeduria","insertVeeduriaBD","handleBlur","handleSubmit","isSubmitting","isValid","autoComplete","expandIcon","onBlur","inputProps","listado","FormHelperText","grados","i","Autocomplete","getOptionLabel","option","REGION_DES","getOptionSelected","autoHighlight","resetProvincias","renderInput","params","PROVINCIA_DES","autocomplete","DISTRITO_DES","IE_DES","SELECTED","DIRECCION","FormLabel","FORMATO_COD","groups","note","FORMATO_DES","startIcon","paper","keepMounted","padreTypes","validCodigoVerificacion","captchaProgress","popover","pointerEvents","fecha_emision","Date","typeError","codigo_verificacion","celular","captchaTypes","generaCaptcha","getCaptchaSR","captcha","img","RegistroPadreScreen","isLooked","setIsLooked","toLowerCase","codigo","nombre_completo","savePadreBD","utils","DateFnsUtils","locale","esLocale","disableFuture","clearable","invalidDateMessage","maxDateMessage","openTo","clearLabel","cancelLabel","okLabel","views","KeyboardButtonProps","maxLength","imagen","src","alt","detect","App","browser","version","os","ThemeProvider","padreState","existe","captchaState","ubigeoState","institucionState","estudianteState","preguntaState","veeduriaState","formatoState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.53d06e77.chunk.js","sourcesContent":["const niveles = [\r\n    {\r\n        cod: 'P',\r\n        des:'PRIMARIA',\r\n    },\r\n    {\r\n        cod: 'S',\r\n        des:'SECUNDARIA',\r\n    },\r\n]\r\n\r\nconst grados_primaria = [\r\n    {\r\n        cod: '1',\r\n        des:'1ro',\r\n    },\r\n    {\r\n        cod: '2',\r\n        des:'2do',\r\n    },\r\n    {\r\n        cod: '3',\r\n        des:'3ro',\r\n    },\r\n    {\r\n        cod: '4',\r\n        des:'4to',\r\n    },\r\n    {\r\n        cod: '5',\r\n        des:'5to',\r\n    },\r\n    {\r\n        cod: '6',\r\n        des:'6to',\r\n    },\r\n]\r\n\r\nconst grados_secundaria = [\r\n    {\r\n        cod: '1',\r\n        des:'1ro',\r\n    },\r\n    {\r\n        cod: '2',\r\n        des:'2do',\r\n    },\r\n    {\r\n        cod: '3',\r\n        des:'3ro',\r\n    },\r\n    {\r\n        cod: '4',\r\n        des:'4to',\r\n    },\r\n    {\r\n        cod: '5',\r\n        des:'5to',\r\n    },\r\n]\r\n\r\nconst secciones = [\r\n    {\r\n        cod: '1',\r\n        des:'ÚNICA',\r\n    },\r\n    {\r\n        cod: 'A',\r\n        des:'A',\r\n    },\r\n    {\r\n        cod: 'B',\r\n        des:'B',\r\n    },\r\n    {\r\n        cod: 'C',\r\n        des:'C',\r\n    },\r\n    {\r\n        cod: 'D',\r\n        des:'D',\r\n    },\r\n]\r\n\r\nexport {\r\n    niveles,\r\n    grados_primaria,\r\n    grados_secundaria,\r\n    secciones,\r\n}","import React from 'react'\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Paper,\r\n    IconButton,\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport RemoveRedEyeIcon from '@material-ui/icons/RemoveRedEye';\r\nimport { TextSnippet } from '../../icons/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n}));\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    root: {\r\n        padding: '0px',\r\n    },\r\n    head: {\r\n        backgroundColor: theme.palette.table.bg_head,\r\n        color: theme.palette.common.black,\r\n        padding: '16px',\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRowGroup = withStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.table.bg_group,\r\n    },\r\n}))(TableRow);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n    '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n    },\r\n    },\r\n}))(TableRow);\r\n\r\nconst StyledEyeIcon = withStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.warning.main,\r\n    },\r\n}))(RemoveRedEyeIcon);\r\n\r\n\r\nconst StyledTextSnippet = withStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.success.main,\r\n    },\r\n}))(TextSnippet);\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n    createData('Frozen yoghurt', 'PAULO CESAR RAVICHAHUA CACERES', '44254145', 'SECUNDARIA', '2do A'),\r\n    createData('Ice cream sandwich', 'AMELIA AIDA ROJAS QUISPE', '41567195', 'PRIMARIA', '3ro C'),\r\n    createData('Eclair', 'ROSA CECILIA RAVICHAHUA CACERES', '42856336', 'SECUNDARIA', 'ÚNICO'),\r\n];\r\n\r\nexport const ListadoEstudiantesScreen = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"customized table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                    <StyledTableCell align=\"center\">ACCIONES</StyledTableCell>\r\n                    <StyledTableCell align=\"left\">NOMBRES</StyledTableCell>\r\n                    <StyledTableCell align=\"left\">DNI</StyledTableCell>\r\n                    <StyledTableCell align=\"left\">NIVEL</StyledTableCell>\r\n                    <StyledTableCell align=\"left\">AÑO</StyledTableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    <StyledTableRowGroup key=\"grupo\">\r\n                        <StyledTableCell component=\"th\" scope=\"row\" colSpan=\"5\">\r\n                            <p style={{margin: '5px 15px'}}>Grupo</p>\r\n                        </StyledTableCell>\r\n                    </StyledTableRowGroup>\r\n                    {rows.map((row) => (\r\n                    <TableRow key={row.name}>\r\n                        {/* <StyledTableCell component=\"th\" scope=\"row\">\r\n                        {row.name}\r\n                        </StyledTableCell> */}\r\n                        <StyledTableCell align=\"center\">\r\n                            <IconButton color=\"secondary\" aria-label=\"edit\">\r\n                                <EditIcon />\r\n                            </IconButton>\r\n                            <IconButton color=\"primary\" aria-label=\"delete\">\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                            <IconButton color=\"warning\" aria-label=\"search\">\r\n                                <StyledEyeIcon />\r\n                            </IconButton>\r\n                            <IconButton color=\"success\" aria-label=\"save\">\r\n                                {/* <StyledSaveIcon /> */}\r\n                                <StyledTextSnippet/>\r\n                            </IconButton>\r\n                        </StyledTableCell>\r\n                        <StyledTableCell align=\"left\">{row.calories}</StyledTableCell>\r\n                        <StyledTableCell align=\"left\">{row.fat}</StyledTableCell>\r\n                        <StyledTableCell align=\"left\">{row.carbs}</StyledTableCell>\r\n                        <StyledTableCell align=\"left\">{row.protein}</StyledTableCell>\r\n                    </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { SvgIcon } from '@material-ui/core'\r\n\r\nexport const TextSnippet = ( props ) => {\r\n    return (\r\n        <SvgIcon { ...props }>\r\n            <path d=\"M20.41,8.41l-4.83-4.83C15.21,3.21,14.7,3,14.17,3H5C3.9,3,3,3.9,3,5v14c0,1.1,0.9,2,2,2h14c1.1,0,2-0.9,2-2V9.83 C21,9.3,20.79,8.79,20.41,8.41z M7,7h7v2H7V7z M17,17H7v-2h10V17z M17,13H7v-2h10V13z\"/>\r\n        </SvgIcon>\r\n    )\r\n}\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport red from '@material-ui/core/colors/red';\r\nimport grey from '@material-ui/core/colors/grey';\r\nimport { yellow, green } from '@material-ui/core/colors';\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: red[700],\r\n            bg_head: red[300],\r\n            avatar: red[600],\r\n            subAvatar: red[400],\r\n        },\r\n        secondary: {\r\n            main: blue[700],\r\n            bg_head: blue[100],\r\n            avatar: blue[300],\r\n        },\r\n        warning: {\r\n            main: yellow[700],\r\n        },\r\n        success: {\r\n            main: green[400],\r\n        },\r\n        error: {\r\n            main: red[400],\r\n        },\r\n        table: {\r\n            bg_head: grey[400],\r\n            bg_group: grey[200],\r\n        },\r\n    },\r\n    // palette: {\r\n    //     primary: blue,\r\n    //     secondary: pink,\r\n    // },\r\n});\r\n","import { makeStyles, withStyles } from '@material-ui/core/styles'\r\nimport MuiStepper from '@material-ui/core/Stepper'\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    actionsContainer: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    resetContainer: {\r\n        padding: theme.spacing(3),\r\n    },\r\n    center_item: {\r\n        margin: 'auto',\r\n    },\r\n    dividerInset: {\r\n        margin: `5px 0 0 ${theme.spacing(9)}px`,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(0),\r\n        minWidth: 200,\r\n    },\r\n    small: {\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n        color: theme.white,\r\n        backgroundColor: theme.palette.primary.subAvatar,\r\n    },\r\n    smallText: {\r\n        fontSize: 14,\r\n        fontWeight: 100,\r\n    },\r\n    // stepperRoot: {\r\n    //     '& > *': {\r\n    //         padding: theme.spacing(0),\r\n    //     },\r\n    // },\r\n}));\r\n\r\nexport const Stepper = withStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(0),\r\n    },\r\n}))(MuiStepper);\r\n\r\n","import React from 'react'\r\nimport { Avatar, Typography } from '@material-ui/core'\r\n\r\nexport const AvatarControl = ( { clase, numero, sizeText } ) => {\r\n\r\n    return (\r\n        <Avatar className={ clase }>\r\n            <Typography className={ sizeText }>{ numero }</Typography>\r\n        </Avatar>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { FormControl, FormControlLabel, Radio, RadioGroup } from '@material-ui/core'\r\n\r\nexport const RadioGroupControl = ( { respuestas, preg, handleChange } ) => {\r\n\r\n    return (\r\n        <FormControl component=\"fieldset\">\r\n            <RadioGroup row name={ preg.ID } onChange={ ( e ) => handleChange( e, preg.ID ) }>\r\n                {\r\n                    respuestas.filter( rpta => rpta.ID_PREGUNTA === preg.ID )\r\n                    .map( rpta => (\r\n                        <FormControlLabel value={ preg.ID + '_' + rpta.ID }\r\n                        name={ preg.ID + '_' + rpta.ID }\r\n                        control={ <Radio color=\"primary\" /> } \r\n                        label={ rpta.DESCRIPCION } />\r\n                    ) )\r\n                }\r\n            </RadioGroup>\r\n        </FormControl>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { FormControl, FormControlLabel, FormGroup, Checkbox } from '@material-ui/core'\r\n\r\nexport const CheckboxGroupControl = ( { respuestas, preg, handleChange } ) => {\r\n\r\n    return (\r\n        <FormControl component=\"fieldset\">\r\n            <FormGroup row>\r\n                {\r\n                    respuestas.filter( rpta => rpta.ID_PREGUNTA === preg.ID )\r\n                    .map( rpta => (\r\n                        <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                options={ rpta }\r\n                                id={ preg.ID + '_' + rpta.ID  }\r\n                                name={ preg.ID + '_' + rpta.ID }\r\n                                onChange={ ( e ) => handleChange( e, preg.ID ) }\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label={ rpta.DESCRIPCION }\r\n                        />\r\n                    ) )\r\n                }\r\n            </FormGroup>\r\n        </FormControl>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { FormControl, Select, InputLabel, MenuItem } from '@material-ui/core'\r\n\r\nexport const SelectControl = ( { respuestas, preg, handleChange, classes } ) => {\r\n\r\n    return (\r\n        <FormControl id={ preg.ID } className={ classes.formControl } >\r\n            <InputLabel>\r\n                Respuesta\r\n            </InputLabel>\r\n            <Select\r\n            name={ preg.ID }\r\n            onChange={ ( e ) => handleChange( e, preg.ID ) } >\r\n            {\r\n                respuestas.filter( rpta => rpta.ID_PREGUNTA === preg.ID )\r\n                .map( rpta => (\r\n                    <MenuItem\r\n                    key={ preg.ID + '_' + rpta.ID }\r\n                    name={ preg.ID + '_' + rpta.ID }\r\n                    value={ preg.ID + '_' + rpta.ID }>{ rpta.DESCRIPCION }</MenuItem>\r\n                ) )\r\n            }\r\n            </Select>\r\n        </FormControl>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TextField } from '@material-ui/core'\r\n\r\nexport const TextboxControl = ( { preg, handleChange, classes } ) => {\r\n\r\n    return (\r\n        <TextField\r\n        className={ classes.textField }\r\n        size=\"small\"\r\n        label=\"Respuesta\"\r\n        name={ preg.ID }\r\n        value={ preg.RESPUESTA[0] }\r\n        onChange={ ( e ) => handleChange( e, preg.ID ) }\r\n        />\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { FormControl, Select, InputLabel, MenuItem, Checkbox, ListItemText, Input } from '@material-ui/core'\r\n\r\nexport const ComboCheckboxControl = ( { respuestas, preg, handleChange, classes, MenuProps } ) => {\r\n\r\n    return (\r\n        <FormControl className={ classes.multiSelect }>\r\n            <InputLabel>Respuesta</InputLabel>\r\n            <Select\r\n            id={ preg.ID }\r\n            multiple\r\n            value={ preg.RESPUESTA }\r\n            onChange={ ( e ) => handleChange( e, preg.ID ) }\r\n            input={ <Input/> }\r\n            renderValue={ ( selected ) =>{ \r\n                let arrDes = []\r\n                selected.forEach(element => {\r\n                    arrDes.push( element.split('_')[2] )\r\n                });\r\n                return arrDes.join(', ')\r\n            } }\r\n            MenuProps={ MenuProps }\r\n            >\r\n            {\r\n                respuestas.filter( rpta => rpta.ID_PREGUNTA === preg.ID )\r\n                .map( rpta => (\r\n                    <MenuItem \r\n                    key={ preg.ID + '_' + rpta.ID }\r\n                    value={ preg.ID + '_' + rpta.ID + '_' + rpta.DESCRIPCION }>\r\n                        <Checkbox\r\n                        checked={ preg.RESPUESTA.indexOf( preg.ID + '_' + rpta.ID + '_' + rpta.DESCRIPCION  ) > -1}\r\n                        color=\"primary\" />\r\n                        <ListItemText primary={ rpta.DESCRIPCION } />\r\n                    </MenuItem>\r\n                ) )\r\n            }\r\n            </Select>\r\n        </FormControl>\r\n\r\n    )\r\n}\r\n","import { makeStyles, withStyles } from '@material-ui/core/styles'\r\nimport MuiAccordion from '@material-ui/core/Accordion'\r\nimport MuiAccordionSummary from '@material-ui/core/AccordionSummary'\r\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails'\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '100%',\r\n            height: theme.spacing(16),\r\n        },\r\n    },\r\n    orange: {\r\n        color: theme.white,\r\n        backgroundColor: theme.palette.primary.avatar,\r\n    },\r\n    orangeMobile: {\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n        color: theme.white,\r\n        backgroundColor: theme.palette.primary.avatar,\r\n    },\r\n    small: {\r\n        width: theme.spacing(4),\r\n        height: theme.spacing(4),\r\n        color: theme.white,\r\n        backgroundColor: theme.palette.primary.subAvatar,\r\n    },\r\n    smallMobile: {\r\n        width: theme.spacing(2),\r\n        height: theme.spacing(2),\r\n        color: theme.white,\r\n        backgroundColor: theme.palette.primary.subAvatar,\r\n    },\r\n    textBrowser: {\r\n        fontSize: '14px',\r\n    },\r\n    textMobile: {\r\n        fontSize: '10px',\r\n    },\r\n    center_item: {\r\n        margin: 'auto',\r\n    },\r\n    dividerInset: {\r\n        margin: `5px 0 0 ${theme.spacing(9)}px`,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(0),\r\n        minWidth: 250,\r\n    },\r\n    multiSelect: {\r\n        margin: theme.spacing(0),\r\n        minWidth: 250,\r\n    },\r\n    textField: {\r\n        margin: theme.spacing(0),\r\n        minWidth: 300,\r\n    },\r\n}));\r\n\r\n\r\nexport const Accordion = withStyles({\r\n    root: {\r\n    border: '1px solid rgba(0, 0, 0, .125)',\r\n    width: '100%',\r\n    boxShadow: 'none',\r\n    '&:not(:last-child)': {\r\n        borderBottom: 0,\r\n    },\r\n    '&:before': {\r\n        display: 'none',\r\n    },\r\n    '&$expanded': {\r\n        margin: 'auto',\r\n    },\r\n    },\r\n    expanded: {},\r\n})(MuiAccordion);\r\n\r\nexport const AccordionSummary = withStyles({\r\n    root: {\r\n    backgroundColor: '#eee',\r\n    borderBottom: '1px solid #ddd',\r\n    marginBottom: -1,\r\n    minHeight: 46,\r\n    '&$expanded': {\r\n        minHeight: 46,\r\n    },\r\n    },\r\n    content: {\r\n        '&$expanded': {\r\n            margin: '12px 0',\r\n        },\r\n    },\r\n    expanded: {},\r\n})(MuiAccordionSummary);\r\n\r\nexport const AccordionDetails = withStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2)\r\n    },\r\n}))(MuiAccordionDetails);\r\n","export const preguntaTypes = {\r\n    PREGUNTA_GET_START: '[Pregunta] GET_START',\r\n    PREGUNTA_GET_COMPLETE: '[Pregunta] GET_COMPLETE',\r\n    PREGUNTA_GET_ERROR: '[Pregunta] GET_ERROR',\r\n    PREGUNTA_SET_COMPLETE: '[Pregunta] SET_COMPLETE',\r\n    PREGUNTA_SET_HABILITADO: '[Pregunta] SET_HABILITADO',\r\n}","import React from 'react'\r\nimport Fab from '@material-ui/core/Fab';\r\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\r\n\r\nexport const DisabledControl = () => {\r\n    return (\r\n        <Fab disabled variant=\"extended\">\r\n            <NotInterestedIcon/> Deshabilitado\r\n        </Fab>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Typography, Divider } from '@material-ui/core'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useStyles, \r\n    Accordion, \r\n    AccordionSummary,\r\n    AccordionDetails\r\n} from './BrowserStyle'\r\n// import SimpleBar from 'simplebar-react';\r\nimport SimpleBarReact from \"simplebar-react\";\r\nimport 'simplebar/dist/simplebar.min.css';\r\nimport { setComplete, setHabilitado } from '../../redux/actions/preguntaActions';\r\nimport { DisabledControl } from './controles/Disabled';\r\nimport { RadioGroupControl } from './controles/RadioGroup';\r\nimport { CheckboxGroupControl } from './controles/CheckboxGroup';\r\nimport { SelectControl } from './controles/Select';\r\nimport { TextboxControl } from './controles/Textbox';\r\nimport { ComboCheckboxControl } from './controles/ComboCheckbox';\r\nimport { AvatarControl } from './controles/Avatar';\r\nimport { isBrowser } from \"react-device-detect\";\r\n\r\nexport const BrowserScreen = () => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n\r\n    let { grupos, preguntas, respuestas, dependencias } = useSelector( state => state.pregunta )\r\n    const [value, setValue] = useState(null);\r\n\r\n    let habilita = 0;\r\n    let listaDependencias = [];\r\n    let habilitarPreguntas = [];\r\n\r\n\r\n    const handleChange = (event, preguntaId) => {\r\n        console.log(event.target.name);\r\n        console.log(event.target.value);\r\n\r\n        let cantRespuestasVacias = 0;\r\n        \r\n        preguntas.forEach(preg => {\r\n            if ( preg.ID === preguntaId )\r\n            {\r\n                switch (preg.TIPO_RPTA_COD) {\r\n                    case 1:\r\n                    case 3:\r\n                        // RADIOBUTTON\r\n                        // SELECT\r\n                        setValue({ ...value, [event.target.value]: event.target.value });\r\n                        preg.RESPUESTA = []\r\n                        preg.RESPUESTA.push( event.target.value.split('_')[1] )\r\n\r\n                        setDependencias(preg, event.target.value.split('_')[1]);\r\n                        break;\r\n\r\n                    case 2:\r\n                        // CHECKBOX\r\n                        // setValue({ ...value, [event.target.name]: event.target.value });\r\n                        setValue({ ...value, [event.target.name]: event.target.name });\r\n                        \r\n                        if ( event.target.checked )\r\n                        {\r\n                            preg.RESPUESTA.push( event.target.name.split('_')[1] )\r\n                        }\r\n                        else {\r\n                            preg.RESPUESTA = preg.RESPUESTA.filter( id => id !== event.target.name.split('_')[1] )\r\n                        }\r\n\r\n                        setDependencias(preg, event.target.name.split('_')[1]);\r\n                        break;\r\n\r\n                    case 4:\r\n                        // TEXTBOX\r\n                        setValue({ ...value, [event.target.name]: event.target.value });\r\n                        \r\n                        preg.RESPUESTA = []\r\n                        preg.RESPUESTA.push( event.target.value )\r\n\r\n                        break;\r\n\r\n                    case 5:\r\n                    case 6:\r\n                        // COMBOCHECKBOX\r\n                        setValue({ ...value, [event.target.value]: event.target.value });\r\n                        // let values = []\r\n                        // event.target.value.forEach(element => {\r\n                        //     values.push( element.split('_')[1]  )\r\n                        // });\r\n                        preg.RESPUESTA = event.target.value\r\n\r\n                        // setDependencias(preg, event.target.value.split('_')[1]);\r\n                        break;\r\n                \r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n\r\n            if (preg.RESPUESTA.length === 0 && preg.IND_PADRE === '0' && preg.HABILITADO)\r\n            {\r\n                cantRespuestasVacias++;\r\n            }\r\n        });\r\n\r\n        dispatch( setComplete({ isComplete: (cantRespuestasVacias === 0) }) );\r\n\r\n        console.log(preguntas)\r\n    };\r\n\r\n\r\n    const setDependencias = (preg, valor) => {\r\n        listaDependencias = dependencias.filter(e => e.ID_PREGUNTA === preg.ID)\r\n    \r\n        if (listaDependencias.length > 0)\r\n        {\r\n            habilita = listaDependencias.filter(e => e.ID_RESPUESTA.toString() === valor).length\r\n            habilitarPreguntas = preguntas.filter(e => e.DEPENDENCIA === preg.ID.toString());\r\n            habilitarPreguntas.forEach( e => {\r\n                if (habilita === 0){\r\n                    e.RESPUESTA = [];\r\n                }\r\n                dispatch( setHabilitado({ ID: e.ID, HABILITADO: (habilita === 1) }) )\r\n            })\r\n        }\r\n    }\r\n\r\n    \r\n    const ITEM_HEIGHT = 48;\r\n    const ITEM_PADDING_TOP = 8;\r\n    const MenuProps = {\r\n        PaperProps: {\r\n            style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 100,\r\n            },\r\n        },\r\n    }\r\n\r\n    return (\r\n        <SimpleBarReact style={{ maxHeight: 500 }} forceVisible=\"y\" autoHide={ false }>\r\n            <div className=\"ed-grid s-grid-1\">\r\n                {\r\n                    grupos.map( grupo => (\r\n                        <Accordion square expanded>\r\n                            <AccordionSummary aria-controls=\"panel1d-content\" id={ grupo.ID }>\r\n                                <Typography>{ grupo.DESCRIPCION }</Typography>\r\n                            </AccordionSummary>\r\n                            {\r\n                                preguntas.filter( preg => preg.GRUPO_COD === grupo.ID && preg.ID_PADRE === 0 )\r\n                                .map( preg => (\r\n                                    <>\r\n                                    {\r\n                                        ( preg.IND_PADRE === '0' )\r\n                                        ?\r\n                                            <AccordionDetails>\r\n                                                <div className=\"ed-container full\">\r\n                                                    <div className=\"ed-item\" style={ { padding: '0px' } }>\r\n                                                        <div className=\"ed-grid s-grid-8 m-grid-12\">\r\n                                                            <div className={ classes.center_item }>\r\n                                                                <AvatarControl clase={ \r\n                                                                    isBrowser \r\n                                                                    ? classes.orange \r\n                                                                    : classes.orangeMobile } numero={ preg.CODIGO }\r\n                                                                    sizeText={\r\n                                                                        isBrowser \r\n                                                                        ? classes.textBrowser \r\n                                                                        : classes.textMobile }/>\r\n                                                            </div>\r\n                                                            <div className=\"s-cols-7 m-cols-11 ed-grid rows-gap\">\r\n                                                                <div className={ classes.center_item }>\r\n                                                                    <Typography>{ preg.DESCRIPCION }</Typography>\r\n                                                                </div>\r\n                                                                <div className={ classes.center_item }>\r\n                                                                    {\r\n                                                                        // RADIOBUTTON\r\n                                                                        ( preg.TIPO_RPTA_COD === 1 )\r\n                                                                        &&\r\n                                                                        <div>\r\n                                                                            {\r\n                                                                                ( preg.HABILITADO )\r\n                                                                                &&\r\n                                                                                <RadioGroupControl respuestas={ respuestas }\r\n                                                                                preg={ preg }\r\n                                                                                handleChange={ handleChange }/>\r\n                                                                            }\r\n                                                                            {\r\n                                                                                ( !preg.HABILITADO ) && <DisabledControl/>\r\n                                                                            }\r\n                                                                        </div>\r\n                                                                    }\r\n                                                                    {\r\n                                                                        // CHECKBOX\r\n                                                                        ( preg.TIPO_RPTA_COD === 2 )\r\n                                                                        &&\r\n                                                                        <div>\r\n                                                                            {\r\n                                                                                ( preg.HABILITADO )\r\n                                                                                &&\r\n                                                                                <CheckboxGroupControl respuestas={ respuestas }\r\n                                                                                preg={ preg }\r\n                                                                                handleChange={ handleChange }/>\r\n                                                                            }\r\n                                                                            {\r\n                                                                                ( !preg.HABILITADO ) && <DisabledControl/>\r\n                                                                            }\r\n                                                                        </div>\r\n                                                                    }\r\n                                                                    {\r\n                                                                        // SELECT\r\n                                                                        ( preg.TIPO_RPTA_COD === 3 )\r\n                                                                        &&\r\n                                                                        <div>\r\n                                                                            {\r\n                                                                                ( preg.HABILITADO )\r\n                                                                                &&\r\n                                                                                <SelectControl respuestas={ respuestas }\r\n                                                                                preg={ preg }\r\n                                                                                classes={ classes }\r\n                                                                                handleChange={ handleChange }/>\r\n                                                                            }\r\n                                                                            {\r\n                                                                                ( !preg.HABILITADO ) && <DisabledControl/>\r\n                                                                            }\r\n                                                                        </div>\r\n                                                                    }\r\n                                                                    {\r\n                                                                        // TEXTBOX\r\n                                                                        ( preg.TIPO_RPTA_COD === 4 )\r\n                                                                        &&\r\n                                                                        <TextboxControl preg={ preg }\r\n                                                                        classes={ classes }\r\n                                                                        handleChange={ handleChange }/>\r\n                                                                    }\r\n                                                                    {\r\n                                                                        // COMBOCHECKBOX\r\n                                                                        ( preg.TIPO_RPTA_COD === 5 || preg.TIPO_RPTA_COD === 6 )\r\n                                                                        &&\r\n                                                                        <ComboCheckboxControl respuestas={ respuestas }\r\n                                                                        preg={ preg }\r\n                                                                        classes={ classes }\r\n                                                                        MenuProps={ MenuProps }\r\n                                                                        handleChange={ handleChange }/>\r\n                                                                    }\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </AccordionDetails>\r\n                                        :\r\n                                            <AccordionDetails>\r\n                                                <div className=\"ed-container full\">\r\n                                                    <div className=\"ed-item\" style={ { padding: '0px' } }>\r\n                                                        <div className=\"ed-grid s-grid-8 m-grid-12\">\r\n                                                            <div className={ classes.center_item }>\r\n                                                                <AvatarControl clase={ \r\n                                                                    isBrowser \r\n                                                                    ? classes.orange \r\n                                                                    : classes.orangeMobile } numero={ preg.CODIGO }\r\n                                                                    sizeText={\r\n                                                                        isBrowser \r\n                                                                        ? classes.textBrowser \r\n                                                                        : classes.textMobile }/>\r\n                                                            </div>\r\n                                                            <div className=\"s-cols-3 m-cols-4\" style={ { margin: 'auto' } }>\r\n                                                                <Typography>{ preg.DESCRIPCION }</Typography>\r\n                                                            </div>\r\n                                                            <div className=\"s-cols-4 m-cols-6 ed-grid s-grid-4 m-grid-8 rows-gap\">\r\n                                                                {\r\n                                                                    preguntas.filter( hijo => hijo.ID_PADRE === preg.ID )\r\n                                                                    .map( (hijo, index) => (\r\n                                                                        <>\r\n                                                                            <div className={ classes.center_item }>\r\n                                                                                <AvatarControl clase={ \r\n                                                                                    isBrowser \r\n                                                                                    ? classes.small \r\n                                                                                    : classes.smallMobile } numero={ hijo.CODIGO }\r\n                                                                                    sizeText={\r\n                                                                                        isBrowser \r\n                                                                                        ? classes.textBrowser \r\n                                                                                        : classes.textMobile }/>\r\n                                                                            </div>\r\n                                                                            <div className=\"s-cols-3 m-cols-7 ed-grid rows-gap\">\r\n                                                                                <div className={ classes.center_item }>\r\n                                                                                    <Typography>{ hijo.DESCRIPCION }</Typography>\r\n                                                                                </div>\r\n                                                                                <div className={ classes.center_item }>\r\n                                                                                    {\r\n                                                                                        // RADIOBUTTON\r\n                                                                                        ( hijo.TIPO_RPTA_COD === 1 )\r\n                                                                                        &&\r\n                                                                                        <RadioGroupControl respuestas={ respuestas }\r\n                                                                                        preg={ hijo }\r\n                                                                                        handleChange={ handleChange }/>\r\n                                                                                    }\r\n                                                                                    {\r\n                                                                                        // CHECKBOX\r\n                                                                                        ( hijo.TIPO_RPTA_COD === 2 )\r\n                                                                                        &&\r\n                                                                                        <CheckboxGroupControl respuestas={ respuestas }\r\n                                                                                        preg={ hijo }\r\n                                                                                        handleChange={ handleChange }/>\r\n                                                                                    }\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            {\r\n                                                                                ( index < preguntas.filter( hijo => hijo.ID_PADRE === preg.ID ).length - 1 )\r\n                                                                                &&\r\n                                                                                <div class=\"s-cols-4 m-cols-8 ed-grid rows-gap\">\r\n                                                                                    <Divider/>\r\n                                                                                </div>\r\n                                                                            }\r\n                                                                        </>\r\n                                                                    ) )\r\n                                                                }\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </AccordionDetails>\r\n                                    }\r\n                                    <Divider/>\r\n                                    </>\r\n                                ) )\r\n                            }\r\n                        </Accordion>\r\n                    ) )\r\n                }\r\n            </div>\r\n        </SimpleBarReact>\r\n    )\r\n}\r\n","import { preguntaTypes } from '../../types/preguntaTypes'\r\n\r\nexport const getPreguntas = ( payload ) => ({\r\n    type: preguntaTypes.PREGUNTA_GET_START,\r\n    payload\r\n})\r\n\r\nexport const setComplete = ( payload ) => ({\r\n    type: preguntaTypes.PREGUNTA_SET_COMPLETE,\r\n    payload\r\n})\r\n\r\nexport const setHabilitado = ( payload ) => ({\r\n    type: preguntaTypes.PREGUNTA_SET_HABILITADO,\r\n    payload\r\n})","import React, { forwardRef } from 'react'\r\nimport { Dialog,\r\n    AppBar,\r\n    Toolbar,\r\n    Button,\r\n    IconButton,\r\n    Slide,\r\n    Typography\r\n} from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { theme } from '../../styles/setTheme';\r\n\r\nimport {\r\n    BrowserView,\r\n    MobileView,\r\n    // isBrowser,\r\n    // isMobile\r\n} from \"react-device-detect\";\r\nimport { MobileScreen } from './MobileScreen';\r\nimport { BrowserScreen } from './BrowserScreen';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        marginLeft: theme.spacing(0),\r\n        flex: 1,\r\n        fontSize: theme.typography.pxToRem(17),\r\n        fontWeight: theme.typography.fontWeightRegular\r\n    },\r\n    toolbar: {\r\n        minHeight: '30px',\r\n        paddingLeft: '10px',\r\n        paddingRight: '10px',\r\n    },\r\n}));\r\n\r\nconst StyledAppBar = withStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: \"#ffffff\",\r\n        marginBottom: -1,\r\n        '&$expanded': {\r\n            minHeight: 30,\r\n        },\r\n    },\r\n})(AppBar);\r\n\r\n\r\nexport const FormatoScreen = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            {/* <StyledAppBar>\r\n                <Toolbar className={ classes.toolbar }>\r\n                    <Typography className={ classes.title }>\r\n                        Registro de formato\r\n                    </Typography>\r\n                </Toolbar>\r\n            </StyledAppBar> */}\r\n\r\n            <BrowserView>\r\n                <BrowserScreen/>\r\n            </BrowserView>\r\n            <MobileView>\r\n                <BrowserScreen/>\r\n                {/* <MobileScreen/> */}\r\n            </MobileView>\r\n\r\n        </>\r\n    )\r\n}\r\n","import { makeStyles, AccordionSummary, AccordionActions } from \"@material-ui/core\";\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { theme } from '../../styles/setTheme'\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(17),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n    icon: {\r\n        color: \"#ffffff\",\r\n    },\r\n    detalle: {\r\n        padding: \"25px 10px 20px\",\r\n    },\r\n    classOne: {\r\n        textTransform: 'lowercase',\r\n        '& > :first-letter': {\r\n            textTransform: 'uppercase'\r\n        }\r\n    },\r\n    wrapper: {\r\n        position: 'relative',\r\n    },\r\n    fieldProgress: {\r\n        color: theme.palette.secondary.primary,\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '80%',\r\n        marginTop: -6,\r\n        marginLeft: -12,\r\n    },\r\n    autocompleteProgress: {\r\n        color: theme.palette.secondary.main,\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -6,\r\n        marginLeft: -12,\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginBottom: 0,\r\n        marginTop: '12px',\r\n    },\r\n}));\r\n\r\nexport const StyledAccordionSummary = withStyles({\r\n    root: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: \"#ffffff\",\r\n        marginBottom: -1,\r\n        minHeight: 30,\r\n        boxShadow: '0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)',\r\n        '&$expanded': {\r\n            minHeight: 30,\r\n        },\r\n    },\r\n    content: {\r\n        '&$expanded': {\r\n            margin: '0px 0',\r\n        },\r\n    },\r\n    expanded: {},\r\n})(AccordionSummary);\r\n\r\nexport const StyledAccordionActions = withStyles({\r\n    root: {\r\n        padding: '8px 25px',\r\n    },\r\n})(AccordionActions);\r\n","export const ubigeoTypes = {\r\n    REGION_RESET: '[Region] RESET',\r\n    REGION_GET_START: '[Region] GET_START',\r\n    REGION_GET_COMPLETE: '[Region] GET_COMPLETE',\r\n    REGION_GET_ERROR: '[Region] GET_ERROR',\r\n    \r\n    PROVINCIA_RESET: '[Provincia] RESET',\r\n    PROVINCIA_GET_START: '[Provincia] GET_START',\r\n    PROVINCIA_GET_COMPLETE: '[Provincia] GET_COMPLETE',\r\n    PROVINCIA_GET_ERROR: '[Provincia] GET_ERROR',\r\n    \r\n    DISTRITO_RESET: '[Distrito] RESET',\r\n    DISTRITO_GET_START: '[Distrito] GET_START',\r\n    DISTRITO_GET_COMPLETE: '[Distrito] GET_COMPLETE',\r\n    DISTRITO_GET_ERROR: '[Distrito] GET_ERROR',\r\n}","import { ubigeoTypes } from \"../../types/ubigeoTypes\"\r\n\r\nexport const getRegiones = ( payload ) => ({\r\n    type: ubigeoTypes.REGION_GET_START,\r\n    payload\r\n})\r\n\r\nexport const resetRegiones = ( payload = [] ) => ({\r\n    type: ubigeoTypes.REGION_RESET,\r\n    payload\r\n})\r\n\r\nexport const getProvincias = ( payload ) => ({\r\n    type: ubigeoTypes.PROVINCIA_GET_START,\r\n    payload\r\n})\r\n\r\nexport const resetProvincias = ( payload = [] ) => ({\r\n    type: ubigeoTypes.PROVINCIA_RESET,\r\n    payload\r\n})\r\n\r\nexport const getDistritos = ( payload ) => ({\r\n    type: ubigeoTypes.DISTRITO_GET_START,\r\n    payload\r\n})\r\n\r\nexport const resetDistritos = ( payload = [] ) => ({\r\n    type: ubigeoTypes.DISTRITO_RESET,\r\n    payload\r\n})\r\n\r\n","import Swal from 'sweetalert2'\r\n\r\nexport const Mensaje = ( text, type = 'Error', icon = 'error' ) => {\r\n    Swal.fire(type, text, icon)\r\n}\r\n","export const MessagesError = {\r\n    codigo_verificacion: 'Código de verificación incorrecto'\r\n}\r\n\r\nexport const logErrors = ( e ) => {\r\n    const errorModel = {\r\n        Type: '',\r\n        Message: ''\r\n    }\r\n\r\n    if (e instanceof TypeError) {\r\n        errorModel.Type = 'Type Error'\r\n    } else if (e instanceof RangeError) {\r\n        errorModel.Type = 'Range Error'\r\n    } else if (e instanceof EvalError) {\r\n        errorModel.Type = 'Eval Error'\r\n    } else {\r\n        errorModel.Type = 'Unspecified Error'\r\n    }\r\n\r\n    if ( e.Message )\r\n        errorModel.Message = e.Message\r\n    else\r\n        errorModel.Message = e.toString()\r\n\r\n    return errorModel\r\n}\r\n","import qs from 'qs'\r\nimport axios from 'axios'\r\n\r\nconst Headers = {\r\n    'content-type': 'application/x-www-form-urlencoded;charset=utf-8',\r\n    \"Access-Control-Allow-Origin\": \"*\"\r\n}\r\n\r\nexport const apiCall = ( method, url, data, headers = Headers ) => axios({\r\n    method,\r\n    url,\r\n    data: qs.stringify({\r\n        ...data\r\n    }),\r\n    headers\r\n})\r\n","import { region_get_url, provincia_get_url, distrito_get_url } from \"./urlBase\"\r\nimport { apiCall } from \"./apiCall\";\r\n\r\nconst listar_regiones = async () => {\r\n\r\n    try {\r\n\r\n        const resp = await apiCall( 'GET', region_get_url, null )\r\n        const response = resp.data\r\n\r\n        if ( response.Success ) {\r\n            return response\r\n        }\r\n        else {\r\n            console.log('ubigeoHelper', '15')\r\n            throw response\r\n        }\r\n\r\n    } catch ( e ) {\r\n        console.log('ubigeoHelper', '20')\r\n        throw e\r\n    }\r\n}\r\n\r\nconst listar_provincias = async ( region ) => {\r\n\r\n    try {\r\n\r\n        const resp = await apiCall( 'GET', `${provincia_get_url}/${region}`, null )\r\n        const response = resp.data\r\n\r\n        if ( response.Success ) {\r\n            return response\r\n        }\r\n        else {\r\n            console.log('ubigeoHelper', '36')\r\n            throw response\r\n        }\r\n\r\n    } catch ( e ) {\r\n        console.log('ubigeoHelper', '41')\r\n        throw e\r\n    }\r\n}\r\n\r\nconst listar_distritos = async ( region, provincia ) => {\r\n\r\n    try {\r\n\r\n        const resp = await apiCall( 'GET', `${distrito_get_url}/${region}/${provincia}`, null )\r\n        const response = resp.data\r\n\r\n        if ( response.Success ) {\r\n            return response\r\n        }\r\n        else {\r\n            console.log('ubigeoHelper', '57')\r\n            throw response\r\n        }\r\n\r\n    } catch ( e ) {\r\n        console.log('ubigeoHelper', '62')\r\n        throw e\r\n    }\r\n}\r\n\r\nexport {\r\n    listar_regiones,\r\n    listar_provincias,\r\n    listar_distritos\r\n}","// const urlBase = 'http://localhost:8934/api/restful/'\r\nconst urlBase = 'https://desanet1.contraloria.gob.pe/Graficos/api/restful/'\r\n\r\nconst valida_dni_url = urlBase + 'padre-familia/valida-dni'\r\nconst genera_captcha_url = urlBase + 'captcha/genera-captcha'\r\nconst region_get_url = urlBase + 'region/region-get-all'\r\nconst provincia_get_url = urlBase + 'provincia/provincia-get-all-by-region'\r\nconst distrito_get_url = urlBase + 'distrito/distrito-get-all-by-provincia'\r\nconst institucion_get_url = urlBase + 'inst-edu/inst-edu-get-all-by-ubigeo'\r\nconst pregunta_url = urlBase + 'pregunta/pregunta-get-all'\r\nconst veeduria_url = urlBase + 'veeduria/veeduria-insert-all'\r\nconst valida_existe_dni_url = urlBase + 'estudiante/valida-dni'\r\nconst formato_get_url = urlBase + 'formato/formato-get-all'\r\n\r\nexport {\r\n    valida_dni_url,\r\n    genera_captcha_url,\r\n    region_get_url,\r\n    provincia_get_url,\r\n    distrito_get_url,\r\n    institucion_get_url,\r\n    pregunta_url,\r\n    veeduria_url,\r\n    valida_existe_dni_url,\r\n    formato_get_url,\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport NumberFormat from 'react-number-format'\r\n\r\nconst FORMATOS = {\r\n    dni: '########',\r\n    celular: '#### - #####',\r\n}\r\n\r\nexport function TextNumber(props) {\r\n    const { inputRef, onChange, ...other } = props;\r\n\r\n    var format = ''\r\n    switch ( props.name ) {\r\n        case 'dni':\r\n            format = FORMATOS.dni\r\n            break;\r\n\r\n        case 'celular':\r\n            format = FORMATOS.celular\r\n            break;\r\n    \r\n        default:\r\n            break;\r\n    }\r\n    return (\r\n        <NumberFormat\r\n            { ...other }\r\n            getInputRef={ inputRef }\r\n            onValueChange={ (values) => {\r\n                onChange( { \r\n                    target: {\r\n                        name: props.name,\r\n                        value: values.value,\r\n                    } } )\r\n                \r\n            } }\r\n            \r\n            // thousandSeparator\r\n            format={ format }\r\n            isNumericString\r\n            prefix=\"\"\r\n        />\r\n    );\r\n}\r\nTextNumber.propTypes = {\r\n    inputRef: PropTypes.func.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\n\r\n{/* className={ clsx( classes.margin, classes.textField ) } */}\r\n{/* <FormControl size=\"small\" id=\"frm-dni\" fullWidth>\r\n    <InputLabel htmlFor=\"standard-adornment-password\" required>\r\n        DNI\r\n    </InputLabel>\r\n    <Input id=\"standard-adornment-password\" type=\"text\"\r\n        endAdornment={\r\n            <InputAdornment position=\"end\">\r\n                <IconButton>\r\n                    <Search />\r\n                </IconButton>\r\n            </InputAdornment>\r\n        }\r\n    />\r\n</FormControl> */}\r\n\r\n\r\n","export const institucionTypes = {\r\n    INSTITUCION_RESET: '[Institucion] RESET',\r\n    INSTITUCION_GET_START: '[Institucion] GET_START',\r\n    INSTITUCION_GET_COMPLETE: '[Institucion] GET_COMPLETE',\r\n    INSTITUCION_GET_ERROR: '[Institucion] GET_ERROR',\r\n}","import { institucionTypes } from '../../types/instEducativaTypes'\r\n\r\nexport const getInstituciones = ( payload ) => ({\r\n    type: institucionTypes.INSTITUCION_GET_START,\r\n    payload\r\n})\r\n\r\nexport const resetInstituciones = ( payload = [] ) => ({\r\n    type: institucionTypes.INSTITUCION_RESET,\r\n    payload\r\n})\r\n","import { institucion_get_url } from \"./urlBase\"\r\nimport { apiCall } from \"./apiCall\";\r\n\r\nconst listar_instituciones = async ( region, provincia, distrito, nivel ) => {\r\n\r\n    try {\r\n\r\n        const resp = await apiCall( 'GET', `${institucion_get_url}/${region}/${provincia}/${distrito}/${nivel}`, null )\r\n        const response = resp.data\r\n\r\n        if ( response.Success ) {\r\n            return response\r\n        }\r\n        else {\r\n            console.log('ubigeoHelper', '15')\r\n            throw response\r\n        }\r\n\r\n    } catch ( e ) {\r\n        console.log('ubigeoHelper', '20')\r\n        throw e\r\n    }\r\n}\r\n\r\nexport {\r\n    listar_instituciones\r\n}","import { Mensaje } from \"../../controls/Mensaje\"\r\nimport { logErrors } from \"../../logErrors\"\r\nimport { listar_instituciones } from \"../../helpers/institucionHelper\"\r\nimport { getInstituciones } from \"../actions/instEducativaActions\"\r\nimport { institucionTypes } from \"../../types/instEducativaTypes\"\r\n\r\nexport const getInstitucionesBD = ( region, provincia, distrito, nivel ) => {\r\n    return async( dispatch, getState ) => {\r\n        try {\r\n            dispatch( getInstituciones( [] ) )\r\n            \r\n            const response = await listar_instituciones( region, provincia, distrito, nivel )\r\n\r\n            if ( response.Validacion !== '' ){\r\n                dispatch( { type: institucionTypes.INSTITUCION_GET_ERROR, payload: { message: response.Validacion, severity: 'error' } } );\r\n            }\r\n            else{\r\n                dispatch( { type: institucionTypes.INSTITUCION_GET_COMPLETE, \r\n                    payload: response.Data } );\r\n            }\r\n\r\n        } catch ( e ) {\r\n            dispatch( { type: institucionTypes.INSTITUCION_GET_ERROR, payload: [] } );\r\n            const err = logErrors( e )\r\n            Mensaje( err.Message, err.Type )\r\n        }\r\n        \r\n    }\r\n}","import * as Yup from 'yup'\r\n\r\nconst ProfileSchema = Yup.object().shape( {\r\n    nombre: Yup.string()\r\n        .required('Requerido'),\r\n    apellido_paterno: Yup.string()\r\n        .required('Requerido'),\r\n    apellido_materno: Yup.string()\r\n        .required('Requerido'),\r\n    dni: Yup.string()\r\n        .required('Requerido')\r\n        .min(8, 'Debe tener 8 dígitos')\r\n        .max(8, 'Debe tener 8 dígitos'),\r\n    nivel: Yup.string()\r\n        .required('Requerido'),\r\n    grado: Yup.string()\r\n        .required('Requerido')\r\n        .nullable(),\r\n    seccion: Yup.string()\r\n        .required('Requerido'),\r\n    region: Yup.string()\r\n        .required('Requerido'),\r\n    provincia: Yup.string()\r\n        .required('Requerido'),\r\n    distrito: Yup.string()\r\n        .required('Requerido'),\r\n    inst_educativa: Yup.string()\r\n        .required('Requerido'),\r\n    // acceptTerms: Yup.bool().oneOf([true], 'Debe seleccionar el formato'),\r\n    formato: Yup.array().required(\"Debe seleccionar el formato\"),\r\n    // aceptar_termino: Yup.boolean()\r\n    // .oneOf([true]),\r\n    // riesgos: Yup.array( Yup.string().oneOf( ['High', 'Medium', 'Low'] ) ).min(1),\r\n    // comentario_riesgos: Yup.mixed().when('riesgos', {\r\n    //     is: ( riesgos ) => riesgos.find( ir => ir === 'High'),\r\n    //     then: Yup.string().required().min(20).max(100),\r\n    //     otherwise: Yup.string().min(20).max(100)\r\n    // })\r\n} )\r\n\r\n// const schema = yup\r\n//   .object({\r\n//     red: yup.boolean(),\r\n//     orange: yup.boolean(),\r\n//     green: yup.boolean()\r\n//   })\r\n//   .test(\r\n//     'myCustomTest',\r\n//     null,\r\n//     (obj) => {\r\n//       if ( obj.red || obj.orange || obj.green ) {\r\n//         return true; // everything is fine\r\n//       }\r\n\r\n//       return new yup.ValidationError(\r\n//         'Please check one checkbox',\r\n//         null,\r\n//         'myCustomFieldName'\r\n//       );\r\n//     }\r\n//   );\r\n\r\nexport default ProfileSchema","import { pregunta_url } from \"./urlBase\"\r\nimport { apiCall } from \"./apiCall\";\r\n\r\nconst listar_preguntas = async () => {\r\n\r\n    try {\r\n\r\n        const resp = await apiCall( 'GET', pregunta_url, null )\r\n        const response = resp.data\r\n\r\n        if ( response.Success ) {\r\n            return response\r\n        }\r\n        else {\r\n            console.log('preguntasHelper', '15')\r\n            throw response\r\n        }\r\n\r\n    } catch ( e ) {\r\n        console.log('preguntasHelper', '20')\r\n        throw e\r\n    }\r\n}\r\n\r\nexport {\r\n    listar_preguntas\r\n}","export const formatoTypes = {\r\n    FORMATO_RESET: '[Formato] RESET',\r\n    FORMATO_GET_START: '[Formato] GET_START',\r\n    FORMATO_GET_COMPLETE: '[Formato] GET_COMPLETE',\r\n    FORMATO_GET_ERROR: '[Formato] GET_ERROR',\r\n}","import { formato_get_url } from \"./urlBase\"\r\nimport { apiCall } from \"./apiCall\";\r\n\r\nconst listar_formatos = async () => {\r\n\r\n    try {\r\n\r\n        const resp = await apiCall( 'GET', formato_get_url, null )\r\n        const response = resp.data\r\n\r\n        if ( response.Success ) {\r\n            return response\r\n        }\r\n        else {\r\n            console.log('formatoHelper', '15')\r\n            throw response\r\n        }\r\n\r\n    } catch ( e ) {\r\n        console.log('formatoHelper', '20')\r\n        throw e\r\n    }\r\n}\r\n\r\nexport {\r\n    listar_formatos\r\n}","import { veeduria_url } from \"./urlBase\"\r\nimport { apiCall } from \"./apiCall\";\r\n\r\nconst insertar_veeduria = async (data) => {\r\n\r\n    try {\r\n\r\n        const resp = await apiCall( 'POST', veeduria_url, data )\r\n        const response = resp.data\r\n\r\n        if ( response.Success ) {\r\n            return response\r\n        }\r\n        else {\r\n            console.log('veeduriaHelper', '15')\r\n            throw response\r\n        }\r\n\r\n    } catch ( e ) {\r\n        console.log('veeduriaHelper', '20')\r\n        throw e\r\n    }\r\n}\r\n\r\nexport {\r\n    insertar_veeduria\r\n}","export const veeduriaTypes = {\r\n    VEEDURIA_SAVE_START: '[Veeduria] SAVE_START',\r\n    VEEDURIA_SAVE_COMPLETE: '[Veeduria] SAVE_COMPLETE',\r\n    VEEDURIA_SAVE_ERROR: '[Veeduria] SAVE_ERROR',\r\n}","import Swal from 'sweetalert2'\r\n\r\nexport const ProcesoStart = ( title = '' ) => {\r\n    Swal.fire({\r\n        title,\r\n        text: 'Procesando...',\r\n        allowOutsideClick: false,\r\n        onBeforeOpen: () => {\r\n            Swal.showLoading()\r\n        }\r\n    })\r\n}\r\n\r\nexport const ProcesoEnd = () => {\r\n    Swal.close()\r\n}","export const estudianteTypes = {\r\n    ESTUDIANTE_SAVE_START: '[Estudiante] SAVE_START',\r\n    ESTUDIANTE_SAVE_COMPLETE: '[Estudiante] SAVE_COMPLETE',\r\n    ESTUDIANTE_SAVE_ERROR: '[Estudiante] SAVE_ERROR',\r\n    ESTUDIANTE_VALIDATED: '[Estudiante] VALIDATED',\r\n}","import { valida_existe_dni_url } from \"./urlBase\"\r\nimport { apiCall } from \"./apiCall\";\r\n\r\nconst validaDNI = async ( estudiante ) => {\r\n\r\n    try {\r\n        const resp = await apiCall( 'POST', valida_existe_dni_url, estudiante )\r\n        const response = resp.data\r\n\r\n        if ( response.Success ) {\r\n            return response\r\n        }\r\n        else {\r\n            console.log('estudianteHelper', '37')\r\n            throw response\r\n        }\r\n\r\n    } catch ( e ) {\r\n        console.log('estudianteHelper', '42')\r\n        throw e\r\n    }\r\n}\r\n\r\nexport {\r\n    validaDNI\r\n}","import { estudianteTypes } from \"../../types/estudianteTypes\"\r\nimport { valida_DNI } from \"../actions/estudianteActions\"\r\nimport { validaDNI } from \"../../helpers/estudianteHelper\"\r\nimport { Mensaje } from \"../../controls/Mensaje\"\r\nimport { logErrors, MessagesError } from \"../../logErrors\"\r\n\r\nexport const validarDNI = ( estudiante ) => {\r\n    return async( dispatch, getState ) => {\r\n        try {\r\n            const { dni, message, severity } = getState().estudiante\r\n\r\n            if (estudiante.dni === dni && severity === 'success' && message !== '') return;\r\n\r\n            dispatch( valida_DNI() )\r\n            \r\n            const response = await validaDNI( estudiante )\r\n\r\n            console.log(response)\r\n            if ( response.Validacion !== '' ){\r\n                dispatch( { type: estudianteTypes.ESTUDIANTE_SAVE_ERROR, payload: { message: response.Validacion, severity: 'error' } } );\r\n                Mensaje( response.Validacion, 'Aviso', 'info' )\r\n            }\r\n            else{\r\n                dispatch( { type: estudianteTypes.ESTUDIANTE_SAVE_COMPLETE, \r\n                    payload: { ...estudiante, message: 'Se validó con éxito', severity: 'success' } } );\r\n            }\r\n\r\n        } catch ( e ) {\r\n            dispatch( { type: estudianteTypes.ESTUDIANTE_SAVE_ERROR, payload: [] } );\r\n            const err = logErrors( e )\r\n            Mensaje( err.Message, err.Type )\r\n            \r\n        }\r\n        \r\n    }\r\n}","import { estudianteTypes } from \"../../types/estudianteTypes\"\r\n\r\nexport const valida_DNI = ( payload ) => ({\r\n    type: estudianteTypes.ESTUDIANTE_SAVE_START,\r\n    payload\r\n})\r\n","\r\nimport React from 'react'\r\nimport { Dialog, DialogTitle, DialogContent, Typography, DialogActions, Button, makeStyles,\r\n    List, ListItem, ListItemText } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(17),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n}));\r\n\r\nexport const ConfirmControl = ( props ) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const { onSubmit, onClose, open, dni, nombre, ...other } = props;\r\n\r\n    const handleCancel = () => {\r\n        onClose();\r\n    };\r\n\r\n    const handleOk = () => {\r\n        onSubmit();\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        maxWidth=\"xs\"\r\n        aria-labelledby=\"confirmation-dialog-title\"\r\n        open={open}\r\n        {...other}\r\n        >\r\n        <DialogTitle id=\"confirmation-dialog-title\">Confirmación</DialogTitle>\r\n            <DialogContent dividers>\r\n                <Typography className={ classes.heading }>\r\n                    ¿Desea registrar la veeduría escolar?\r\n                </Typography>\r\n\r\n                <List component=\"div\" role=\"list\">\r\n                    <ListItem button divider disabled role=\"listitem\">\r\n                    </ListItem>\r\n                    <ListItem button divider role=\"listitem\">\r\n                        <ListItemText primary={ nombre } secondary={ dni } style={ { textTransform: 'capitalize' } } />\r\n                    </ListItem>\r\n                </List>\r\n\r\n            </DialogContent>\r\n        <DialogActions>\r\n            <Button autoFocus onClick={ handleCancel } color=\"primary\"\r\n            variant=\"outlined\">\r\n            Cancelar\r\n            </Button>\r\n            <Button onClick={ handleOk } color=\"primary\"\r\n            type=\"submit\" \r\n            variant=\"contained\">\r\n                Aceptar\r\n            </Button>\r\n        </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Snackbar, withStyles, makeStyles } from '@material-ui/core'\r\nimport { Alert, AlertTitle } from '@material-ui/lab'\r\nimport { theme } from '../styles/setTheme';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    err: {\r\n        backgroundColor: theme.palette.success.main,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\n\r\nconst SuccessAlert = withStyles({\r\n    root: {\r\n        backgroundColor: theme.palette.success.main,\r\n        color: '#fff',\r\n    },\r\n    icon: {\r\n        backgroundColor: theme.palette.success.main,\r\n        color: '#fff',\r\n    },\r\n})(Alert);\r\n\r\nconst ErrorAlert = withStyles({\r\n    root: {\r\n        backgroundColor: theme.palette.error.main,\r\n        color: '#fff',\r\n    },\r\n    icon: {\r\n        backgroundColor: theme.palette.error.main,\r\n        color: '#fff',\r\n    },\r\n})(Alert);\r\n\r\nexport const Alerta = ( { state, handleClose } ) => {\r\n    \r\nconst classes = useStyles();\r\n    const { vertical, horizontal, open, message, severity } = state\r\n    return (\r\n        <Snackbar\r\n        autoHideDuration={ 2000 }\r\n        anchorOrigin={ { vertical, horizontal } }\r\n        open={ open }\r\n        onClose={ handleClose }\r\n        message={ message }\r\n        key={ vertical + horizontal }>\r\n            {/* {\r\n                ( severity === 'error' )\r\n                ? \r\n                    <ErrorAlert onClose={ handleClose } severity=\"error\">\r\n                        <AlertTitle>Error</AlertTitle>\r\n                        { message }\r\n                    </ErrorAlert>\r\n                :\r\n                    <SuccessAlert onClose={ handleClose } severity=\"success\">\r\n                        <AlertTitle>Éxito</AlertTitle>\r\n                        { message }\r\n                    </SuccessAlert>\r\n            } */}\r\n            {\r\n                ( severity === 'error' )\r\n                &&\r\n                    <Alert variant=\"filled\" onClose={ handleClose } severity={ severity }>\r\n                        <AlertTitle>Alerta!</AlertTitle>\r\n                        { message }\r\n                    </Alert>\r\n            }\r\n            {/* <Alert variant=\"filled\" onClose={ handleClose } severity={ severity }>\r\n                <AlertTitle>Alerta!</AlertTitle>\r\n                { message }\r\n            </Alert> */}\r\n            \r\n        </Snackbar>\r\n\r\n\r\n        // <Snackbar\r\n        //     anchorOrigin={ { vertical, horizontal } }\r\n        //     open={ open }\r\n        //     onClose={ handleClose }\r\n        //     message=\"I love snacks\"\r\n        //     key={ vertical + horizontal }\r\n        // />\r\n    )\r\n}\r\n","import React, { useState, useCallback, useEffect, useMemo } from 'react'\r\n\r\nimport { TextField,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    Button,\r\n    Accordion,\r\n    AccordionDetails,\r\n    Typography,\r\n    CircularProgress,\r\n    Divider,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    FormHelperText,\r\n    FormGroup,\r\n    FormLabel,\r\n    // AppBar,\r\n    // Toolbar\r\n} from '@material-ui/core'\r\n\r\nimport { Autocomplete } from '@material-ui/lab'\r\n\r\nimport { ListadoEstudiantesScreen } from './ListadoEstudiantesScreen'\r\nimport SendIcon from '@material-ui/icons/Send'\r\nimport CachedIcon from '@material-ui/icons/Cached'\r\n\r\nimport { FormatoScreen } from '../formato/FormatoScreen'\r\n\r\nimport { useStyles, StyledAccordionSummary, StyledAccordionActions } from './RegistroEstudianteStyle'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getRegionesBD, getProvinciasBD, getDistritosBD } from '../../redux/thunk/ubigeoThunk'\r\nimport { TextNumber } from '../../controls/TextNumber'\r\nimport { getProvincias, getDistritos, getRegiones, resetRegiones, resetProvincias, resetDistritos } from '../../redux/actions/ubigeoActions'\r\nimport { getInstituciones, resetInstituciones } from '../../redux/actions/instEducativaActions'\r\nimport { getInstitucionesBD } from '../../redux/thunk/instEducativaThunk'\r\nimport { Formik, Field, useFormikContext, useField } from 'formik'\r\nimport MuiTextField from '@material-ui/core/TextField';\r\nimport {\r\n    AutocompleteRenderInputParams,\r\n} from 'formik-material-ui-lab';\r\nimport ProfileSchema from './registroEstudianteProfile'\r\nimport { getPreguntasBD } from '../../redux/thunk/preguntaThunk'\r\nimport { getFormatosBD } from '../../redux/thunk/formatoThunk'\r\n\r\nimport { insertVeeduriaBD } from '../../redux/thunk/veeduriaThunk'\r\nimport { validarDNI } from '../../redux/thunk/estudianteThunk'\r\nimport { ConfirmControl } from '../../controls/Confirmacion'\r\nimport { Alerta } from '../../controls/Alerta'\r\nimport { useRef } from 'react'\r\nimport { Mensaje } from '../../controls/Mensaje'\r\n// import Confirm from '../../controls/Confirmacion'\r\n\r\nconst { niveles, grados_primaria, grados_secundaria, secciones } = require(\"../../data/params\")\r\n\r\n\r\n\r\nexport const RegistroEstudianteScreen = () => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const dispatch = useDispatch()\r\n    const padre = useSelector( state => state.padre )\r\n    const estudiante = useSelector( state => state.estudiante )\r\n    const regiones = useSelector( state => state.regiones )\r\n    const provincias = useSelector( state => state.provincias )\r\n    const distritos = useSelector( state => state.distritos )\r\n    const instituciones = useSelector( state => state.instituciones )\r\n    const formatos = useSelector( state => state.formatos )\r\n    const { isComplete } = useSelector( state => state.pregunta )\r\n    const veeduria = useSelector( state => state.veeduria )\r\n    const [expanded, setexpanded] = useState(false)\r\n\r\n\r\n\r\n    const [alert, setAlert] = useState({\r\n        open: false,\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n        message: '',\r\n        severity: 'success'\r\n    });\r\n    const handleCloseAlert = () => {\r\n        setAlert({ ...alert, open: false });\r\n    };\r\n    const messageActive = useRef( veeduria.message )\r\n\r\n    useEffect(() => {\r\n\r\n        if ( veeduria.message !== messageActive.current && veeduria.severity === 'error' )\r\n        {\r\n            setAlert({ ...alert, open: true, message: veeduria.message, severity: veeduria.severity });\r\n            messageActive.current = veeduria.message\r\n        }\r\n        if ( veeduria.message === 'ok' && veeduria.severity === 'success' )\r\n        {\r\n            Mensaje( 'Muchas gracias por participar de la veeduría virtual.', '¡Registro Exitoso!', 'success' )\r\n            // setAlert({ ...alert, open: true, message: 'Se registró con éxito.', severity: veeduria.severity });\r\n            messageActive.current = veeduria.message\r\n            setTimeout(() => {\r\n                handleReload();\r\n            }, 3000);\r\n        }\r\n\r\n    }, [ veeduria, alert ])\r\n\r\n\r\n\r\n\r\n\r\n    useEffect( () => {\r\n        if ( padre.severity === 'success' ) {\r\n            setTimeout( () => {\r\n                setexpanded( true )\r\n                dispatch( getFormatosBD() )\r\n                dispatch( getPreguntasBD() )\r\n            }, 1500 );\r\n        }\r\n    }, [ padre.severity, dispatch ] )\r\n\r\n\r\n\r\n    const MyField = props => {\r\n        const {\r\n            setFieldValue,\r\n        } = useFormikContext();\r\n        const [field, meta] = useField(props);\r\n    \r\n        useEffect(() => {\r\n            let isCurrent = true;\r\n            if ( estudiante.message?.length > 0 && estudiante.severity !== 'success' && !estudiante.isLoading ) {\r\n                if (!!isCurrent) {\r\n                    setFieldValue(props.name, '');\r\n                }\r\n            }\r\n\r\n            return () => {\r\n                isCurrent = false;\r\n            };\r\n        }, [ setFieldValue, props.name ]);\r\n    \r\n\r\n        useEffect(() => {\r\n            if (meta.value.length === 8 && !estudiante.isLoading)\r\n            {\r\n                if (meta.value !== padre.dni)\r\n                {\r\n                    dispatch( validarDNI( { dni: meta.value } ) )\r\n                }\r\n            }\r\n        }, [ meta.value ]);\r\n\r\n        return (\r\n        <>\r\n            <TextField\r\n            fullWidth \r\n            size=\"small\"\r\n            label=\"DNI\"\r\n            onChange={ ( { target } ) => {\r\n                console.log(target.value)\r\n\r\n                if (target.value.length === 8)\r\n                {\r\n                    if (target.value !== padre.dni)\r\n                    {\r\n                        dispatch( validarDNI( { dni: target.value } ) )\r\n                    }\r\n                }\r\n                setFieldValue( \"dni\", target.value )\r\n            } }\r\n            helperText={ meta.touched ? meta.error : \"\"}\r\n            error={ meta.touched && Boolean( meta.error ) }\r\n            InputProps={ { inputComponent: TextNumber } }\r\n            disabled={ estudiante.isLoading }\r\n            {...props} {...field}\r\n            />\r\n            { estudiante.isLoading && <CircularProgress size={ 20 } className={ classes.fieldProgress } /> }\r\n            \r\n        </>\r\n        );\r\n    };\r\n\r\n\r\n    const handleReload = () => {\r\n        // history.push('/')\r\n        // history.replace('/')\r\n\r\n        window.location.reload();\r\n    }\r\n\r\n\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickListItem = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (newValue) => {\r\n        setOpen(false);\r\n        if (newValue) {\r\n            console.log(newValue);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <Formik\r\n        initialValues={ estudiante }\r\n        validate={values => {\r\n            let errors = {};\r\n            \r\n            if (values.dni.length === 8)\r\n            {\r\n                if (values.dni === padre.dni)\r\n                {\r\n                    errors.dni = 'No debe ser igual al DNI del padre'\r\n                }\r\n            }\r\n            return errors;\r\n        }}\r\n        validationSchema={ ProfileSchema }\r\n        onSubmit={ ( values, { setSubmitting, resetForm } ) => {\r\n            const payload = { \r\n                nombre: values.nombre, \r\n                apellido_paterno: values.apellido_paterno, \r\n                apellido_materno: values.apellido_materno,\r\n                dni: values.dni, \r\n                nivel: values.nivel,\r\n                grado: values.grado,\r\n                seccion: values.seccion,\r\n                region: values.region.REGION_COD,\r\n                provincia: values.provincia.PROVINCIA_COD,\r\n                distrito: values.distrito.DISTRITO_COD,\r\n                inst_educativa: values.inst_educativa.CUI,\r\n                formato: values.formato,\r\n            }\r\n            setOpen(false);\r\n            dispatch( insertVeeduriaBD( payload ) ) \r\n            setTimeout(() => {\r\n                setSubmitting(false)\r\n            }, 3000);\r\n        } }\r\n        >\r\n            {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                isSubmitting,\r\n                isValid,\r\n                setFieldValue,\r\n                ...props\r\n            }) => (\r\n                <form \r\n                className={ classes.form }\r\n                autoComplete=\"off\"\r\n                id=\"frm-estudiante\"\r\n                onSubmit={ handleSubmit }>\r\n                                            \r\n                    <Accordion expanded={ expanded } id=\"acordion\" onChange={ () => { setexpanded( !expanded ) } }\r\n                    disabled={padre.severity !== 'success'} >\r\n                        <StyledAccordionSummary aria-controls=\"panel2a-content\" id=\"panel2a-header\"\r\n                        expandIcon={ <ExpandMoreIcon className={ classes.icon }/> } >\r\n                            <Typography className={ classes.heading }>\r\n                                Datos del estudiante\r\n                            </Typography>\r\n                        </StyledAccordionSummary>\r\n                        <AccordionDetails className={ classes.detalle }>\r\n                            \r\n                            <div className=\"ed-grid rows-gap s-gap-3 m-gap-3 l-gap-3 s-grid-2 m-grid-6 lg-grid-12\">\r\n                                <div className=\"s-y-1 s-x-1 s-cols-2 \r\n                                                m-y-1 m-x-1 m-cols-2\r\n                                                l-y-1 l-x-1 l-cols-2\">   \r\n                                    <TextField\r\n                                    fullWidth \r\n                                    size=\"small\"\r\n                                    label=\"Nombres\"\r\n                                    name=\"nombre\"\r\n                                    value={ values.nombre }\r\n                                    onBlur={ handleBlur }\r\n                                    onChange={ handleChange }\r\n                                    helperText={ touched.nombre ? errors.nombre : \"\"}\r\n                                    error={ touched.nombre && Boolean( errors.nombre ) }\r\n                                    inputProps={ { style: { textTransform: 'capitalize' } } }\r\n                                    />\r\n                                </div>\r\n                                <div className=\"s-y-2 s-x-1 s-cols-2\r\n                                                m-y-1 m-x-3 m-cols-2\r\n                                                l-y-1 l-x-3 l-cols-2\">\r\n                                    <TextField\r\n                                    fullWidth \r\n                                    size=\"small\"\r\n                                    label=\"Apellido paterno\"\r\n                                    name=\"apellido_paterno\"\r\n                                    value={ values.apellido_paterno }\r\n                                    onBlur={ handleBlur }\r\n                                    onChange={ handleChange }\r\n                                    // onChange={e => {\r\n                                    //     let value = e.target.value;\r\n                    \r\n                                    //     value = value.replace(/[^A-Za-z]/gi, \"\");\r\n                    \r\n                                    //     this.setState({\r\n                                    //         value\r\n                                    //     });\r\n                                    // }}\r\n                                    helperText={ touched.apellido_paterno ? errors.apellido_paterno : \"\"}\r\n                                    error={ touched.apellido_paterno && Boolean( errors.apellido_paterno ) }\r\n                                    inputProps={ { style: { textTransform: 'capitalize' } } }\r\n                                    />\r\n                                </div>\r\n                                <div className=\"s-y-3 s-x-1 s-cols-2\r\n                                                m-y-1 m-x-5 m-cols-2\r\n                                                l-y-1 l-x-5 l-cols-2\">\r\n                                    <TextField\r\n                                    fullWidth \r\n                                    size=\"small\"\r\n                                    label=\"Apellido materno\"\r\n                                    name=\"apellido_materno\"\r\n                                    value={ values.apellido_materno }\r\n                                    onBlur={ handleBlur }\r\n                                    onChange={ handleChange }\r\n                                    helperText={ touched.apellido_materno ? errors.apellido_materno : \"\"}\r\n                                    error={ touched.apellido_materno && Boolean( errors.apellido_materno ) }\r\n                                    inputProps={ { style: { textTransform: 'capitalize' } } }\r\n                                    />\r\n                                </div>\r\n                                <div className=\"s-y-4 s-x-1 s-cols-2\r\n                                                m-y-2 m-x-1 m-cols-2\r\n                                                l-y-1 l-x-7 l-cols-2\">\r\n                                    <div className={ classes.wrapper }>\r\n                                        <MyField name=\"dni\"/>\r\n                                        {/* \r\n                                        <TextField\r\n                                        fullWidth \r\n                                        size=\"small\"\r\n                                        label=\"DNI\"\r\n                                        name=\"dni\"\r\n                                        value={ values.dni }\r\n                                        onBlur={ handleBlur }\r\n                                        // onChange={ handleChange }\r\n                                        onChange={ ( { target } ) => {\r\n                                            console.log(target.value)\r\n\r\n                                            if (target.value.length === 8)\r\n                                            {\r\n                                                if (target.value !== padre.dni)\r\n                                                {\r\n                                                    dispatch( validarDNI( { dni: target.value } ) )\r\n                                                }\r\n                                            }\r\n                                            setFieldValue( \"dni\", target.value )\r\n                                        } }\r\n                                        helperText={ touched.dni ? errors.dni : \"\"}\r\n                                        error={ touched.dni && Boolean( errors.dni ) }\r\n                                        InputProps={ { inputComponent: TextNumber } }\r\n                                        disabled={ estudiante.isLoading }\r\n                                        />\r\n                                        { estudiante.isLoading && <CircularProgress size={ 20 } className={ classes.fieldProgress } /> }\r\n                                     */}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"s-y-5 s-x-1 s-cols-2\r\n                                                m-y-2 m-x-3 m-cols-2\r\n                                                l-y-1 l-x-9 l-cols-2\">\r\n                                    <FormControl\r\n                                    fullWidth\r\n                                    size=\"small\"\r\n                                    id=\"form-nivel\"\r\n                                    name=\"nivel\"\r\n                                    error={ touched.nivel && Boolean( errors.nivel ) }\r\n                                    >\r\n                                        <InputLabel>\r\n                                            Nivel\r\n                                        </InputLabel>\r\n                                        <Select\r\n                                        value={ values.nivel }\r\n                                        onBlur={ handleBlur( 'nivel' ) }\r\n                                        onChange={ e => {\r\n                                            const { value } = e.target\r\n\r\n                                            setFieldValue(\"nivel\", value);\r\n                                            setFieldValue(\"inst_educativa\", '');\r\n\r\n                                            if( regiones.listado.length === 0 )\r\n                                                dispatch( getRegionesBD() )\r\n\r\n                                            dispatch( resetInstituciones() )\r\n                                            if ( value === 'P')\r\n                                                setFieldValue(\"grados\", grados_primaria);\r\n                                            else\r\n                                                setFieldValue(\"grados\", grados_secundaria);\r\n\r\n                                            if ( values.distrito !== '' ){\r\n                                                dispatch( getInstitucionesBD( values.region.REGION_COD, \r\n                                                                            values.provincia.PROVINCIA_COD,\r\n                                                                            values.distrito.DISTRITO_COD,\r\n                                                                            value ) )\r\n                                            }\r\n                                            \r\n                                        } }\r\n                                        >\r\n                                            {\r\n                                                niveles.map( nivel => (\r\n                                                    <MenuItem key={ nivel.cod } value={ nivel.cod }>{ nivel.des }</MenuItem>\r\n                                                ) )\r\n                                            }\r\n                                        </Select>\r\n                                        {\r\n                                            touched.nivel\r\n                                            ? <FormHelperText>{ errors.nivel }</FormHelperText>\r\n                                            : null\r\n                                        }\r\n                                    </FormControl>\r\n                                </div>\r\n                                <div>\r\n                                    <FormControl\r\n                                    fullWidth\r\n                                    size=\"small\"\r\n                                    id=\"form-grado\"\r\n                                    name=\"grado\"\r\n                                    error={ touched.grado && Boolean( errors.grado ) }\r\n                                    >\r\n                                        <InputLabel>\r\n                                            Grado\r\n                                        </InputLabel>\r\n                                        <Select\r\n                                        value={ values.grado }\r\n                                        id=\"grado\"\r\n                                        name=\"grado\"\r\n                                        onBlur={ handleBlur( 'grado' ) }\r\n                                        onChange={ handleChange( 'grado' ) }\r\n                                        >\r\n                                        {\r\n                                            values.grados  &&\r\n                                            values.grados.map( grado => (\r\n                                                <MenuItem key={ grado.cod } value={ grado.cod }>{ grado.des }</MenuItem>\r\n                                            ) )\r\n                                        }\r\n                                        </Select>\r\n                                        {\r\n                                            touched.grado\r\n                                            ? <FormHelperText>{ errors.grado }</FormHelperText>\r\n                                            : null\r\n                                        }\r\n                                    </FormControl>\r\n                                </div>\r\n                                <div>\r\n                                    <FormControl\r\n                                    fullWidth\r\n                                    size=\"small\"\r\n                                    id=\"form-seccion\"\r\n                                    name=\"seccion\"\r\n                                    error={ touched.seccion && Boolean( errors.seccion ) }\r\n                                    >\r\n                                        <InputLabel>\r\n                                            Sección\r\n                                        </InputLabel>\r\n                                        <Select\r\n                                        value={ values.seccion }\r\n                                        onBlur={ handleBlur( 'seccion' ) }\r\n                                        onChange={ handleChange( 'seccion' ) } \r\n                                        >\r\n                                        {\r\n                                            secciones.map( ( seccion, i) => (\r\n                                                <MenuItem key={ i } value={ seccion.cod }>{ seccion.des }</MenuItem>\r\n                                            ) )\r\n                                        }\r\n                                        </Select>\r\n                                        {\r\n                                            touched.seccion\r\n                                            ? <FormHelperText>{ errors.seccion }</FormHelperText>\r\n                                            : null\r\n                                        }\r\n                                    </FormControl>\r\n                                </div>\r\n                                <div className=\"s-y-7 s-x-1 s-cols-2 \r\n                                                m-y-3 m-x-1 m-cols-2\r\n                                                l-y-2 l-x-1 l-cols-2\"> \r\n                                    <div className={ classes.wrapper }>\r\n                                        <Autocomplete\r\n                                        id=\"region\"\r\n                                        name=\"region\"\r\n                                        options={ regiones.listado }\r\n                                        getOptionLabel={ option => ( option.REGION_DES ? option.REGION_DES : '' ) }\r\n                                        getOptionSelected={ ( option, value ) => option.REGION_COD === value.REGION_COD }\r\n                                        fullWidth\r\n                                        size=\"small\"\r\n                                        autoHighlight\r\n                                        value={ values.region }\r\n                                        onBlur={ handleBlur( 'region' ) }\r\n                                        onChange={ ( e, value ) => {\r\n\r\n                                            if ( !value ) {\r\n                                                dispatch( resetProvincias() )\r\n                                                setFieldValue( \"region\", '' )\r\n                                            }\r\n                                            else {\r\n                                                dispatch( getProvinciasBD( value.REGION_COD ) )\r\n                                                setFieldValue( \"region\", value )\r\n                                            }\r\n                                            dispatch( resetDistritos() )\r\n                                            dispatch( resetInstituciones() )\r\n                                            setFieldValue(\"provincia\", '')\r\n                                            setFieldValue(\"distrito\", '')\r\n                                            setFieldValue(\"inst_educativa\", '')\r\n\r\n                                        } }\r\n                                        disabled={ regiones.isLoading }\r\n                                        renderInput={ params => <TextField { ...params }\r\n                                                                label=\"Región\"\r\n                                                                error={ touched.region && Boolean( errors.region ) }\r\n                                                                helperText={ touched.region ? errors.region : \"\" }\r\n                                                                /> }\r\n                                        />\r\n                                        { regiones.isLoading && <CircularProgress size={ 20 } className={ classes.autocompleteProgress } /> }\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"s-y-8 s-x-1 s-cols-2\r\n                                                    m-y-3 m-x-3 m-cols-2\r\n                                                    l-y-2 l-x-3 l-cols-2\">\r\n                                        <div className={ classes.wrapper }>\r\n                                            <Autocomplete\r\n                                            id=\"provincia\"\r\n                                            name=\"provincia\"\r\n                                            options={ provincias.listado }\r\n                                            getOptionLabel={ option => ( option.PROVINCIA_DES ? option.PROVINCIA_DES : '' ) }\r\n                                            getOptionSelected={ ( option, value ) => option.REGION_COD === value.REGION_COD && option.PROVINCIA_COD === value.PROVINCIA_COD }\r\n                                            fullWidth\r\n                                            size=\"small\"\r\n                                            autoHighlight\r\n                                            autocomplete=\"off\"\r\n                                            value={ values.provincia }\r\n                                            onBlur={ handleBlur( 'provincia' ) }\r\n                                            onChange={ ( e, value ) => {\r\n\r\n                                                if ( !value ) {\r\n                                                    dispatch( resetDistritos() )\r\n                                                    setFieldValue( \"provincia\", '' )\r\n                                                }\r\n                                                else {\r\n                                                    dispatch( getDistritosBD( value.REGION_COD, value.PROVINCIA_COD ) )\r\n                                                    setFieldValue( \"provincia\", value )\r\n                                                }\r\n                                                dispatch( resetInstituciones() )\r\n                                                setFieldValue(\"distrito\", '')\r\n                                                setFieldValue(\"inst_educativa\", '')\r\n                                            } }\r\n                                            disabled={ provincias.isLoading }\r\n                                            renderInput={ params => <TextField { ...params }\r\n                                                                    label=\"Provincia\"\r\n                                                                    error={ touched.provincia && Boolean( errors.provincia ) }\r\n                                                                    helperText={ touched.provincia ? errors.provincia : \"\" }\r\n                                                                    /> }\r\n                                            />\r\n                                            { provincias.isLoading && <CircularProgress size={ 20 } className={ classes.autocompleteProgress } /> }\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"s-y-9 s-x-1 s-cols-2\r\n                                                    m-y-3 m-x-5 m-cols-2\r\n                                                    l-y-2 l-x-5 l-cols-2\">\r\n                                        <div className={ classes.wrapper }>\r\n                                            <Autocomplete\r\n                                            id=\"distrito\"\r\n                                            name=\"distrito\"\r\n                                            options={ distritos.listado }\r\n                                            getOptionLabel={ option => ( option.DISTRITO_DES ? option.DISTRITO_DES : '' ) }\r\n                                            getOptionSelected={ ( option, value ) => option.REGION_COD === value.REGION_COD && option.PROVINCIA_COD === value.PROVINCIA_COD && option.DISTRITO_COD === value.DISTRITO_COD }\r\n                                            fullWidth\r\n                                            size=\"small\"\r\n                                            autoHighlight\r\n                                            value={ values.distrito }\r\n                                            onBlur={ handleBlur( 'distrito' ) }\r\n                                            onChange={ ( e, value ) => {\r\n\r\n                                                if ( !value ) {\r\n                                                    dispatch( resetInstituciones() )\r\n                                                    setFieldValue( \"distrito\", '' )\r\n                                                }\r\n                                                else {\r\n                                                    dispatch( getInstitucionesBD( value.REGION_COD, value.PROVINCIA_COD, value.DISTRITO_COD, values.nivel ) )\r\n                                                    setFieldValue( \"distrito\", value )\r\n                                                }\r\n                                                setFieldValue(\"inst_educativa\", '')\r\n\r\n                                            } }\r\n                                            disabled={ distritos.isLoading }\r\n                                            renderInput={ params => <TextField { ...params }\r\n                                                                    label=\"Distrito\"\r\n                                                                    error={ touched.distrito && Boolean( errors.distrito ) }\r\n                                                                    helperText={ touched.distrito ? errors.distrito : '' }\r\n                                                                    /> }\r\n                                            />\r\n                                            { distritos.isLoading && <CircularProgress size={ 20 } className={ classes.autocompleteProgress } /> }\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"s-y-10 s-x-1 s-cols-2\r\n                                                    m-y-4 m-x-1 m-cols-6\r\n                                                    l-y-2 l-x-7 l-cols-6\">\r\n                                        <div className={ classes.wrapper }>\r\n                                            <Autocomplete\r\n                                            id=\"inst_educativa\"\r\n                                            name=\"inst_educativa\"\r\n                                            options={ instituciones.listado }\r\n                                            getOptionLabel={ option => ( option.IE_DES ? option.IE_DES : '' ) }\r\n                                            getOptionSelected={ ( option, value ) => option.CUI === value.CUI }\r\n                                            fullWidth\r\n                                            size=\"small\"\r\n                                            autoHighlight\r\n                                            value={ values.inst_educativa }\r\n                                            onBlur={ handleBlur( 'inst_educativa' ) }\r\n                                            onChange={ ( e, value ) => {\r\n\r\n                                                setFieldValue( 'formato', [] )\r\n\r\n                                                if ( !value ) {\r\n                                                    setFieldValue( \"inst_educativa\", '' )\r\n                                                    if ( formatos.listado.length > 0 )\r\n                                                    {\r\n                                                        formatos.listado[0].SELECTED = false;\r\n                                                    }\r\n                                                }\r\n                                                else {\r\n                                                    setFieldValue( \"inst_educativa\", value )\r\n\r\n                                                    if ( formatos.listado.length > 0 )\r\n                                                    {\r\n                                                        formatos.listado[0].SELECTED = true;\r\n                                                        setFieldValue( 'formato', [ formatos.listado[0] ] )\r\n                                                    }\r\n                                                }\r\n\r\n                                            } }\r\n                                            disabled={ instituciones.isLoading }\r\n                                            renderInput={ params => <TextField { ...params }\r\n                                                                    label=\"Institución Educativa\"\r\n                                                                    error={ touched.inst_educativa && Boolean( errors.inst_educativa ) }\r\n                                                                    helperText={ touched.inst_educativa ? errors.inst_educativa : '' }\r\n                                                                    /> }\r\n                                            />\r\n                                            { instituciones.isLoading && <CircularProgress size={ 20 } className={ classes.autocompleteProgress } /> }\r\n                                            {\r\n                                                values.inst_educativa\r\n                                                ? <FormHelperText>{ 'DIRECCIÓN: ' + values.inst_educativa.DIRECCION }</FormHelperText>\r\n                                                : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                <div className=\"s-y-11 s-x-1 s-cols-2\r\n                                                m-y-5 m-x-1 m-cols-6\r\n                                                l-y-3 l-x-1 l-cols-12\">\r\n                                    {/* https://stackblitz.com/edit/formik-checkbox-radio?file=index.tsx */}\r\n                                    {/* <FormControl component=\"fieldset\"\r\n                                    className={ classes.formControl }\r\n                                    value={ values.formato }\r\n                                    onBlur={ handleBlur( 'formato' ) }\r\n                                    error={ touched.formato && Boolean( errors.formato ) } >\r\n                                        <FormLabel component=\"legend\">Formato</FormLabel>\r\n                                        <FormGroup row>\r\n                                            {\r\n                                                options.map( option => (\r\n                                                    <FormControlLabel\r\n                                                    control={\r\n                                                        <Checkbox\r\n                                                            options={ option }\r\n                                                            id={ option.value }\r\n                                                            defaultValue={ option.value }\r\n                                                            onChange={ ( e, value ) => {\r\n                                                                \r\n                                                                const groups = values.formato\r\n                                                                if ( value ) {\r\n                                                                    if ( groups ) {\r\n                                                                        setFieldValue( 'formato', [ option.value, ...groups ] )\r\n                                                                    }\r\n                                                                    else {\r\n                                                                        setFieldValue( 'formato', [ option.value ] )\r\n                                                                    }\r\n                                                                }\r\n                                                                else{\r\n                                                                    setFieldValue( 'formato', groups.filter( note => note !== option.value ) )\r\n                                                                }\r\n\r\n                                                            } }\r\n                                                            color=\"primary\"\r\n                                                        />\r\n                                                    }\r\n                                                    label={ option.label }\r\n                                                    />\r\n                                                ) )\r\n                                            }\r\n                                        </FormGroup>\r\n                                        {\r\n                                            touched.formato\r\n                                            ? <FormHelperText>{ errors.formato }</FormHelperText>\r\n                                            : null\r\n                                        }\r\n                                    </FormControl> */}\r\n\r\n                                    <FormControl component=\"fieldset\"\r\n                                    className={ classes.formControl }\r\n                                    value={ values.formato }\r\n                                    onBlur={ handleBlur( 'formato' ) }\r\n                                    error={ touched.formato && Boolean( errors.formato ) } >\r\n                                        <FormLabel component=\"legend\">Formato</FormLabel>\r\n                                        <FormGroup row>\r\n                                            {\r\n                                                formatos.listado.map( formato => (\r\n                                                    <FormControlLabel\r\n                                                    control={\r\n                                                        <Checkbox\r\n                                                            options={ formato }\r\n                                                            id={ formato.FORMATO_COD }\r\n                                                            name={ formato.FORMATO_COD }\r\n                                                            checked={ formato.SELECTED }\r\n                                                            disabled\r\n                                                            onChange={ ( e, value ) => {\r\n                                                                const groups = values.formato\r\n                                                                formato.SELECTED = value;\r\n                                                                if ( value ) {\r\n                                                                    if ( groups ) {\r\n                                                                        setFieldValue( 'formato', [ formato.FORMATO_COD, ...groups ] )\r\n                                                                    }\r\n                                                                    else {\r\n                                                                        setFieldValue( 'formato', [ formato.FORMATO_COD ] )\r\n                                                                    }\r\n                                                                }\r\n                                                                else{\r\n                                                                    setFieldValue( 'formato', groups.filter( note => note !== formato.FORMATO_COD ) )\r\n                                                                }\r\n                                                            } }\r\n                                                            color=\"primary\"\r\n                                                        />\r\n                                                    }\r\n                                                    label={ formato.FORMATO_DES }\r\n                                                    />\r\n                                                ) )\r\n                                            }\r\n                                        </FormGroup>\r\n                                        {\r\n                                            touched.formato\r\n                                            ? <FormHelperText>{ errors.formato }</FormHelperText>\r\n                                            : null\r\n                                        }\r\n                                    </FormControl>\r\n\r\n                                </div>\r\n                                <div className=\"s-y-12 s-x-1 s-cols-2\r\n                                                m-y-6 m-x-1 m-cols-6\r\n                                                l-y-4 l-x-1 l-cols-12\">\r\n                                    {\r\n                                        values.inst_educativa\r\n                                        ?   <FormatoScreen/>\r\n                                        :   null\r\n                                    }\r\n                                </div>\r\n                            \r\n                            </div>\r\n                        </AccordionDetails>\r\n                        <Divider />\r\n                        {\r\n                            veeduria.message !== 'ok'\r\n                            ?\r\n                                <StyledAccordionActions> \r\n                                    <Button size=\"small\"\r\n                                    type=\"submit\"\r\n                                    style={ { position: 'left' } }\r\n                                    color=\"secondary\" startIcon={ <CachedIcon /> }\r\n                                    onClick={ handleReload }>\r\n                                        Volver a cargar\r\n                                    </Button>\r\n                                    <Button variant=\"contained\" size=\"large\"\r\n                                    disabled={ !isValid || !isComplete || isSubmitting }\r\n                                    onClick={handleClickListItem}\r\n                                    color=\"primary\" startIcon={ <SendIcon /> } >\r\n                                        Enviar\r\n                                    </Button>\r\n                                </StyledAccordionActions>\r\n                            : null\r\n                        }\r\n                        <ConfirmControl\r\n                            classes={{\r\n                                paper: classes.paper,\r\n                            }}\r\n                            id=\"ringtone-menu\"\r\n                            keepMounted\r\n                            open={ open }\r\n                            onSubmit={ handleSubmit }\r\n                            onClose={ handleClose }\r\n                            dni={ values.dni }\r\n                            nombre={ `${values.nombre} ${values.apellido_paterno} ${values.apellido_materno}` } />\r\n                        <Alerta state={ alert } handleClose={ handleCloseAlert }/>\r\n                    </Accordion>\r\n\r\n                </form>\r\n            ) }\r\n        </Formik>\r\n    )\r\n}\r\n","import { getFormatos } from \"../actions/formatoActions\"\r\nimport { Mensaje } from \"../../controls/Mensaje\"\r\nimport { logErrors } from \"../../logErrors\"\r\nimport { listar_formatos } from \"../../helpers/formatoHelper\"\r\nimport { formatoTypes } from \"../../types/formatoTypes\"\r\n\r\nexport const getFormatosBD = () => {\r\n    return async( dispatch, getState ) => {\r\n        try {\r\n            dispatch( getFormatos( [] ) )\r\n            \r\n            const response = await listar_formatos()\r\n\r\n            if ( response.Validacion !== '' ){\r\n                dispatch( { type: formatoTypes.FORMATO_GET_ERROR, payload: { message: response.Validacion, severity: 'error' } } );\r\n            }\r\n            else{\r\n                dispatch( { type: formatoTypes.FORMATO_GET_COMPLETE, \r\n                    payload: response.Data } );\r\n            }\r\n\r\n        } catch ( e ) {\r\n            dispatch( { type: formatoTypes.FORMATO_GET_ERROR, payload: [] } );\r\n            const err = logErrors( e )\r\n            Mensaje( err.Message, err.Type )\r\n        }\r\n        \r\n    }\r\n}\r\n","import { formatoTypes } from \"../../types/formatoTypes\"\r\n\r\nexport const getFormatos = ( payload ) => ({\r\n    type: formatoTypes.FORMATO_GET_START,\r\n    payload\r\n})\r\n\r\nexport const resetFormatos = ( payload = [] ) => ({\r\n    type: formatoTypes.FORMATO_RESET,\r\n    payload\r\n})\r\n\r\n","import { Mensaje } from \"../../controls/Mensaje\"\r\nimport { logErrors } from \"../../logErrors\"\r\nimport { listar_preguntas } from \"../../helpers/preguntaHelper\"\r\nimport { getPreguntas } from \"../actions/preguntaActions\"\r\nimport { preguntaTypes } from \"../../types/preguntaTypes\"\r\n\r\nexport const getPreguntasBD = () => {\r\n    return async( dispatch, getState ) => {\r\n        try {\r\n            dispatch( getPreguntas() )\r\n            \r\n            const response = await listar_preguntas()\r\n\r\n            if ( response.Validacion !== '' ){\r\n                dispatch( { type: preguntaTypes.PREGUNTA_GET_ERROR, payload: { message: response.Validacion, severity: 'error' } } );\r\n            }\r\n            else{\r\n                console.log(response.Data);\r\n                dispatch( { type: preguntaTypes.PREGUNTA_GET_COMPLETE, \r\n                    payload: response.Data } );\r\n            }\r\n\r\n        } catch ( e ) {\r\n            const err = logErrors( e )\r\n            dispatch( { type: preguntaTypes.PREGUNTA_GET_ERROR, payload: { message: err.Message, severity: 'error' } } );\r\n            Mensaje( err.Message, err.Type )\r\n        }\r\n        \r\n    }\r\n}","import { Mensaje } from \"../../controls/Mensaje\"\r\nimport { logErrors } from \"../../logErrors\"\r\nimport { insertar_veeduria } from \"../../helpers/veeduriaHelper\"\r\nimport { veeduriaTypes } from \"../../types/veeduriaTypes\"\r\nimport { insertVeeduria } from \"../actions/veeduriaActions\"\r\nimport { ProcesoEnd, ProcesoStart } from \"../../controls/Proceso\"\r\n\r\nexport const insertVeeduriaBD = (estudiante) => {\r\n    return async( dispatch, getState ) => {\r\n        try {\r\n            const padre = getState().padre\r\n            // const estudiante = getState().estudiante\r\n            const { preguntas } = getState().pregunta\r\n\r\n\r\n            dispatch( insertVeeduria() )\r\n            \r\n            ProcesoStart()\r\n            const response = await insertar_veeduria({ padre, estudiante, preguntas });\r\n\r\n            if ( response.Validacion !== '' ){\r\n                dispatch( { type: veeduriaTypes.VEEDURIA_SAVE_ERROR, payload: { message: response.Validacion, severity: 'error' } } );\r\n            }\r\n            else{\r\n                dispatch( { type: veeduriaTypes.VEEDURIA_SAVE_COMPLETE, \r\n                    payload: { message: 'ok', severity: 'success' } } );\r\n            }\r\n            \r\n            ProcesoEnd()\r\n\r\n        } catch ( e ) {\r\n            ProcesoEnd()\r\n            const err = logErrors( e )\r\n            dispatch( { type: veeduriaTypes.VEEDURIA_SAVE_ERROR, payload: { message: err.Message, severity: 'error' } } );\r\n            // dispatch( { type: veeduriaTypes.VEEDURIA_SAVE_ERROR, payload: { message: 'Se perdió la conexión. Intente nuevamente por favor', severity: 'error' } } );\r\n            Mensaje( err.Message, err.Type )\r\n        }\r\n        \r\n    }\r\n}","import { veeduriaTypes } from '../../types/veeduriaTypes'\r\n\r\nexport const insertVeeduria = ( payload ) => ({\r\n    type: veeduriaTypes.VEEDURIA_SAVE_START,\r\n    payload\r\n})\r\n","import { getRegiones, getProvincias, getDistritos } from \"../actions/ubigeoActions\"\r\nimport { Mensaje } from \"../../controls/Mensaje\"\r\nimport { logErrors } from \"../../logErrors\"\r\nimport { listar_regiones, listar_provincias, listar_distritos } from \"../../helpers/ubigeoHelper\"\r\nimport { ubigeoTypes } from \"../../types/ubigeoTypes\"\r\n\r\nexport const getRegionesBD = () => {\r\n    return async( dispatch, getState ) => {\r\n        try {\r\n            dispatch( getRegiones( [] ) )\r\n            \r\n            const response = await listar_regiones()\r\n\r\n            if ( response.Validacion !== '' ){\r\n                dispatch( { type: ubigeoTypes.REGION_GET_ERROR, payload: { message: response.Validacion, severity: 'error' } } );\r\n            }\r\n            else{\r\n                dispatch( { type: ubigeoTypes.REGION_GET_COMPLETE, \r\n                    payload: response.Data } );\r\n            }\r\n\r\n        } catch ( e ) {\r\n            dispatch( { type: ubigeoTypes.REGION_GET_ERROR, payload: [] } );\r\n            const err = logErrors( e )\r\n            // Mensaje( err.Message, err.Type )\r\n            Mensaje( 'Se perdió la conexión. Intente nuevamente por favor', err.Type )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const getProvinciasBD = ( region ) => {\r\n    return async( dispatch, getState ) => {\r\n        try {\r\n            dispatch( getProvincias( [] ) )\r\n            \r\n            const response = await listar_provincias( region )\r\n\r\n            if ( response.Validacion !== '' ){\r\n                dispatch( { type: ubigeoTypes.PROVINCIA_GET_ERROR, payload: { message: response.Validacion, severity: 'error' } } );\r\n            }\r\n            else{\r\n                dispatch( { type: ubigeoTypes.PROVINCIA_GET_COMPLETE, \r\n                    payload: response.Data } );\r\n            }\r\n\r\n        } catch ( e ) {\r\n            dispatch( { type: ubigeoTypes.PROVINCIA_GET_ERROR, payload: [] } );\r\n            const err = logErrors( e )\r\n            // Mensaje( err.Message, err.Type )\r\n            Mensaje( 'Se perdió la conexión. Intente nuevamente por favor', err.Type )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const getDistritosBD = ( region, provincia ) => {\r\n    return async( dispatch, getState ) => {\r\n        try {\r\n            dispatch( getDistritos( [] ) )\r\n            \r\n            const response = await listar_distritos( region, provincia )\r\n\r\n            if ( response.Validacion !== '' ){\r\n                dispatch( { type: ubigeoTypes.DISTRITO_GET_ERROR, payload: { message: response.Validacion, severity: 'error' } } );\r\n            }\r\n            else{\r\n                \r\n                dispatch( { type: ubigeoTypes.DISTRITO_GET_COMPLETE, \r\n                    payload: response.Data } );\r\n            }\r\n\r\n        } catch ( e ) {\r\n            dispatch( { type: ubigeoTypes.DISTRITO_GET_ERROR, payload: [] } );\r\n            const err = logErrors( e )\r\n            // Mensaje( err.Message, err.Type )\r\n            Mensaje( 'Se perdió la conexión. Intente nuevamente por favor', err.Type )\r\n        }\r\n        \r\n    }\r\n}","export const padreTypes = {\r\n    PADRE_SAVE_START: '[Padre] SAVE_START',\r\n    PADRE_SAVE_COMPLETE: '[Padre] SAVE_COMPLETE',\r\n    PADRE_SAVE_ERROR: '[Padre] SAVE_ERROR',\r\n    PADRE_VALIDATED: '[Padre] VALIDATED',\r\n}","import { padreTypes } from \"../../types/padreTypes\"\r\n\r\nexport const savePadre = ( payload ) => ({\r\n    type: padreTypes.PADRE_SAVE_START,\r\n    payload\r\n})\r\n\r\nexport const validCodigoVerificacion = ( payload ) => ({\r\n    type: padreTypes.PADRE_VALIDATED,\r\n    payload\r\n})\r\n","import { valida_dni_url } from \"./urlBase\"\r\nimport { apiCall } from \"./apiCall\";\r\n\r\nconst validaDNI = async ( padre ) => {\r\n\r\n    try {\r\n\r\n        // const formData = new FormData()\r\n        // formData.append('dni', dni);\r\n        // const reniec = { dni: dni }\r\n        // for (var k in reniec) {\r\n        //     formData.append(k, reniec[k]);\r\n        // }\r\n\r\n        // const resp = await fetch( valida_dni_url, {\r\n        //     method: 'POST',\r\n        //     headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8' },\r\n        //     body: formData\r\n        // })\r\n        // const response = await resp.json()\r\n\r\n        // if ( response.Success ) {\r\n        //     return response.Message\r\n        // }\r\n        // else {\r\n        //     console.log('padreHelper', '36')\r\n        //     throw response\r\n        // }\r\n\r\n        const resp = await apiCall( 'POST', valida_dni_url, padre )\r\n        const response = resp.data\r\n\r\n        if ( response.Success ) {\r\n            return response\r\n        }\r\n        else {\r\n            console.log('padreHelper', '37')\r\n            throw response\r\n        }\r\n\r\n    } catch ( e ) {\r\n        console.log('padreHelper', '42')\r\n        throw e\r\n    }\r\n}\r\n\r\nexport {\r\n    validaDNI\r\n}","import { AccordionActions, makeStyles, AccordionSummary } from \"@material-ui/core\";\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { theme } from '../../styles/setTheme'\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        width: '100%',\r\n        marginBottom: 0,\r\n    },\r\n    icon: {\r\n        color: \"#ffffff\",\r\n    },\r\n    detalle: {\r\n        padding: \"25px 10px 20px\",\r\n    },\r\n    wrapper: {\r\n        position: 'relative',\r\n    },\r\n    captchaProgress: {\r\n        color: theme.palette.secondary.main,\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '30%',\r\n    },\r\n    popover: {\r\n        pointerEvents: 'none',\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport const StyledAccordionSummary = withStyles({\r\n    root: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: \"#ffffff\",\r\n        marginBottom: -1,\r\n        minHeight: 30,\r\n        boxShadow: '0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)',\r\n        '&$expanded': {\r\n            minHeight: 30,\r\n        },\r\n    },\r\n    content: {\r\n        '&$expanded': {\r\n            margin: '0px 0',\r\n        },\r\n    },\r\n    expanded: {},\r\n})(AccordionSummary);\r\n\r\nexport const StyledAccordionActions = withStyles({\r\n    root: {\r\n        padding: '8px 25px',\r\n    },\r\n})(AccordionActions);\r\n\r\n","import * as Yup from 'yup'\r\n\r\nconst ProfileSchema = Yup.object().shape( {\r\n    dni: Yup.string()\r\n        .required('Requerido')\r\n        .min(8, 'Debe tener 8 dígitos')\r\n        .max(8, 'Debe tener 8 dígitos'),\r\n    fecha_emision: Yup.date()\r\n        .max(new Date(), \"No puede ser mayor a hoy\")\r\n        .typeError('Fecha incorrecta')\r\n        .required('Requerido')\r\n        .nullable(),\r\n    codigo_verificacion: Yup.string()\r\n        .required('Requerido')\r\n        .min(4, 'Debe tener 4 caracteres')\r\n        .max(4, 'Debe tener 4 caracteres'),\r\n    celular: Yup.string()\r\n    .min(9, 'Debe tener 9 dígitos')\r\n    .max(9, 'Debe tener 9 dígitos')\r\n    // password: Yup.string(\"\")\r\n    //     .min(8, \"Password must contain at least 8 characters\")\r\n    //     .required(\"Enter your password\"),\r\n    // confirmPassword: Yup.string(\"Enter your password\")\r\n    //     .required(\"Confirm your password\")\r\n    //     .oneOf([Yup.ref(\"password\")], \"Password does not match\")\r\n} )\r\n// validate={ values => { \r\n        //     var errors = {}\r\n        //     if ( !values.dni ) {\r\n        //         errors.dni = 'El DNI es requerido'\r\n        //     }\r\n        //     else if ( values.dni.length !== 8 ) {\r\n        //         errors.dni = 'DNI tiene que tener 8 dígitos'\r\n        //     }\r\n        //     else if (isNaN(values.dni)) {\r\n        //         errors.dni = 'DNI tiene que ser numérico';\r\n        //     }\r\n            \r\n        //     if ( !values.celular ) {\r\n        //         errors.celular = 'Es requerido'\r\n        //     }\r\n        //     else if ( values.celular.length !== 9 ) {\r\n        //         errors.celular = 'DNI tiene que tener 8 dígitos'\r\n        //     }\r\n        //     else if (isNaN(values.celular)) {\r\n        //         errors.dni = 'DNI celular tiene que ser numérico';\r\n        //     }\r\n        //     return errors\r\n        // } }\r\nexport default ProfileSchema","export const captchaTypes = {\r\n    CAPTCHA_GET_START: '[Captcha] GET_START',\r\n    CAPTCHA_GET_COMPLETE: '[Captcha] GET_COMPLETE',\r\n    CAPTCHA_GET_ERROR: '[Captcha] GET_ERROR',\r\n}","import { genera_captcha_url } from \"./urlBase\"\r\nimport { apiCall } from \"./apiCall\";\r\n\r\nconst generaCaptcha = async () => {\r\n\r\n    try {\r\n        const resp = await apiCall( 'GET', genera_captcha_url, null )\r\n        const response = resp.data\r\n\r\n        if ( response.Success ) {\r\n            return response.Data\r\n        }\r\n        else {\r\n            console.log('captchaHelper', '14')\r\n            throw response\r\n        }\r\n\r\n    } catch ( e ) {\r\n        console.log(e)\r\n        console.log('captchaHelper', '20')\r\n        throw e\r\n    }\r\n}\r\n\r\nexport {\r\n    generaCaptcha\r\n}","import { Mensaje } from \"../../controls/Mensaje\"\r\nimport { logErrors } from \"../../logErrors\"\r\nimport { getCaptcha } from \"../actions/captchaActions\"\r\nimport { captchaTypes } from \"../../types/captchaTypes\"\r\nimport { generaCaptcha } from \"../../helpers/captchaHelper\"\r\n\r\nexport const getCaptchaSR = ( captcha ) => {\r\n    return async( dispatch ) => {\r\n        try {\r\n            // ProcesoStart()\r\n            dispatch( getCaptcha( captcha ) )\r\n            \r\n            const img = await generaCaptcha()\r\n\r\n            dispatch( { type: captchaTypes.CAPTCHA_GET_COMPLETE, payload: img } );\r\n        } catch ( e ) {\r\n            dispatch( { type: captchaTypes.CAPTCHA_GET_ERROR, payload: {} } );\r\n            const err = logErrors( e )\r\n            Mensaje( err.Message, err.Type )\r\n        }\r\n        \r\n    }\r\n}","import { captchaTypes } from \"../../types/captchaTypes\"\r\n\r\nexport const getCaptcha = ( payload ) => ({\r\n    type: captchaTypes.CAPTCHA_GET_START,\r\n    payload\r\n})\r\n","import React, { useState, useEffect, useRef } from 'react'\r\n\r\nimport { TextField,\r\n    Accordion,\r\n    AccordionDetails,\r\n    Divider,\r\n    Button,\r\n    Typography,\r\n    CircularProgress,\r\n    Popover,\r\n} from '@material-ui/core'\r\n\r\nimport {\r\n    KeyboardDatePicker,\r\n    MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers'\r\n\r\n\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\n\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport esLocale from \"date-fns/locale/es\"\r\nimport 'date-fns'\r\n// import clsx from 'clsx';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { savePadreBD } from '../../redux/thunk/padreThunk'\r\nimport { Alerta } from '../../controls/Alerta'\r\nimport { TextNumber } from '../../controls/TextNumber'\r\nimport { useStyles, StyledAccordionSummary, StyledAccordionActions } from './RegistroPadreStyle'\r\nimport { Formik, useField, useFormikContext } from 'formik'\r\nimport ProfileSchema from './registroPadreProfile'\r\nimport { getCaptchaSR } from '../../redux/thunk/captchaThunk'\r\nimport { validCodigoVerificacion } from '../../redux/actions/padreActions'\r\n\r\n\r\nexport const RegistroPadreScreen = ( ) => {\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch()\r\n    const padre = useSelector( state => state.padre )\r\n    const captcha = useSelector( state => state.captcha )\r\n\r\n    const [alert, setAlert] = useState({\r\n        open: false,\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n        message: '',\r\n        severity: 'success'\r\n    });\r\n\r\n    const [isLooked, setIsLooked] = useState(false)\r\n    const [expanded, setexpanded] = useState(true)\r\n    // const [anchorEl, setAnchorEl] = useState(null);\r\n    // let open = Boolean(anchorEl);\r\n    // const handlePopoverOpen = (event) => {\r\n    //     console.log(event.currentTarget)\r\n    //     setAnchorEl(event.currentTarget);\r\n    // };\r\n\r\n    // const handlePopoverClose = () => {\r\n    //     setAnchorEl(null);\r\n    // };\r\n\r\n    useEffect(() => {\r\n        if (!isLooked) {\r\n            setIsLooked( true )\r\n            dispatch( getCaptchaSR() )\r\n        }\r\n    }, [ isLooked, dispatch ])\r\n\r\n    const handleCloseAlert = () => {\r\n        setAlert({ ...alert, open: false });\r\n    };\r\n\r\n    const messageActive = useRef( padre.message )\r\n\r\n    useEffect(() => {\r\n\r\n        if ( padre.message !== '' && padre.severity === 'error' && !captcha.isLoading )\r\n        {\r\n            setAlert({ ...alert, open: true, message: padre.message, severity: padre.severity });\r\n            dispatch( getCaptchaSR() )\r\n            dispatch( validCodigoVerificacion( { message: '' } ) )\r\n            messageActive.current = padre.message\r\n        }\r\n        if ( padre.message !== messageActive.current && padre.severity === 'success' )\r\n        {\r\n            setAlert({ ...alert, open: true, message: padre.message, severity: padre.severity });\r\n            messageActive.current = padre.message\r\n            setTimeout(() => {\r\n                setexpanded( false )\r\n            }, 1500);\r\n        }\r\n\r\n    }, [ padre, alert, dispatch, captcha ])\r\n\r\n\r\n    const MyField = props => {\r\n        const {\r\n            setFieldValue,\r\n        } = useFormikContext();\r\n        const [field, meta] = useField(props);\r\n    \r\n        useEffect(() => {\r\n            let isCurrent = true;\r\n            // your business logic around when to fetch goes here.\r\n            if ( padre.codigo_verificacion.toLowerCase() !== captcha.codigo.toLowerCase()\r\n            && !padre.isLoading ) {\r\n                if (!!isCurrent) {\r\n                    setFieldValue(props.name, '');\r\n                    setFieldValue('codigo_verificacion', '');\r\n                }\r\n            }\r\n            else if ( padre.nombre_completo !== '' && !padre.isLoading ) {\r\n                if (!!isCurrent) {\r\n                    setFieldValue(props.name, padre.nombre_completo);\r\n                    console.log(padre)\r\n                    if (padre.celular)\r\n                    {\r\n                        setFieldValue('celular', padre.celular);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return () => {\r\n                isCurrent = false;\r\n            };\r\n        }, [ setFieldValue, props.name ]);\r\n        \r\n        return (\r\n        <>\r\n            <TextField\r\n            disabled\r\n            helperText=\"Éste dato de completa de Reniec\"\r\n            fullWidth \r\n            size=\"small\"\r\n            label=\"Nombres y apellidos\"\r\n            {...props} {...field}\r\n            />\r\n            {!!meta.touched && !!meta.error && <div>{meta.error}</div>}\r\n        </>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Formik\r\n        // enableReinitialize={true}\r\n        initialValues={ padre }\r\n        validationSchema={ ProfileSchema }\r\n        // onReset={ handleReset } \r\n        onSubmit={ ( values, { props, setSubmitting, resetForm }) => {\r\n            const payload = { \r\n                dni: values.dni, \r\n                fecha_emision: values.fecha_emision, \r\n                codigo_verificacion: values.codigo_verificacion, \r\n                celular: values.celular \r\n            }\r\n            console.log(payload)\r\n            // resetForm( { values: {...values, codigo_verificacion: '' } } )\r\n            dispatch( savePadreBD( payload ) ) \r\n            setTimeout(() => {\r\n                setSubmitting(false)\r\n            }, 3000);\r\n        } }\r\n        >\r\n            {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                isSubmitting,\r\n                isValid,\r\n                ...props\r\n            }) => (\r\n                \r\n                <form \r\n                className={classes.form}\r\n                autoComplete=\"off\"\r\n                id=\"frm-padre\"\r\n                onSubmit={ handleSubmit } >\r\n\r\n                    {/* <Popover\r\n                        id=\"mouse-over-popover\"\r\n                        className={classes.popover}\r\n                        classes={{\r\n                        paper: classes.paper,\r\n                        }}\r\n                        open={ open }\r\n                        anchorEl={ anchorEl }\r\n                        anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                        }}\r\n                        transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left',\r\n                        }}\r\n                        onClose={ handlePopoverClose }\r\n                        disableRestoreFocus\r\n                    >\r\n                        <Typography>Clic aquí para mostrar el contenido</Typography>\r\n                    </Popover> */}\r\n\r\n                    <Accordion expanded={ expanded } id=\"acordion\" onChange={ () => { setexpanded( !expanded ) } }>\r\n                        <StyledAccordionSummary aria-controls=\"panel1a-content\" id=\"panel1a-hea\"\r\n                        expandIcon={ <ExpandMoreIcon className={ classes.icon }/> } >\r\n                        {/* aria-owns={open ? 'mouse-over-popover' : undefined}\r\n                        aria-haspopup=\"true\"\r\n                        onMouseEnter={ handlePopoverOpen }\r\n                        onMouseLeave={ handlePopoverClose }  */}\r\n                            <Typography className={ classes.heading }>\r\n                                Datos del padre/madre de familia\r\n                            </Typography>\r\n                        </StyledAccordionSummary>\r\n                        <AccordionDetails className={ classes.detalle }>\r\n\r\n                            <div className=\"ed-grid rows-gap s-gap-3 m-gap-3 l-gap-3 s-grid-1 m-grid-2 lg-grid-4\">\r\n                                <div>  \r\n                                    <TextField\r\n                                    fullWidth\r\n                                    size=\"small\"\r\n                                    label=\"DNI\"\r\n                                    name=\"dni\"\r\n                                    value={ values.dni }\r\n                                    onBlur={ handleBlur }\r\n                                    onChange={ handleChange }\r\n                                    helperText={ touched.dni ? errors.dni : \"\"}\r\n                                    error={ touched.dni && Boolean( errors.dni ) }\r\n                                    InputProps={ { inputComponent: TextNumber } }\r\n                                    disabled={ padre.nombre_completo?.length > 0 }\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <MuiPickersUtilsProvider utils={ DateFnsUtils } locale={ esLocale }\r\n                                    disabled={ padre.nombre_completo?.length > 0 } >\r\n                                        <KeyboardDatePicker\r\n                                        disableFuture\r\n                                        clearable\r\n                                        // helperText=\"Localization done right\"\r\n                                        invalidDateMessage=\"Fecha incorrecta\"\r\n                                        maxDateMessage=\"No puede ser mayor a hoy\"\r\n                                        openTo=\"year\"\r\n                                        format=\"dd/MM/yyyy\"\r\n                                        clearLabel=\"borrar\"\r\n                                        cancelLabel=\"cancelar\"\r\n                                        okLabel=\"aceptar\"\r\n                                        label=\"Fecha de emisión del DNI\"\r\n                                        views={ [\"year\", \"month\", \"date\"] }\r\n                                        disabled={ padre.nombre_completo?.length > 0 }\r\n                                        // variant=\"inline\"\r\n                                        // maxDate={new Date(\"2020-03-30\")}\r\n                                        // inputVariant=\"outlined\"\r\n                                        fullWidth\r\n                                        size=\"small\"\r\n                                        name=\"fecha_emision\"\r\n                                        value={ values.fecha_emision }\r\n                                        onChange={ value => props.setFieldValue( \"fecha_emision\", value ) }\r\n                                        KeyboardButtonProps={ { \"aria-label\": \"change date\" } }\r\n                                        onBlur={ handleBlur }\r\n                                        helperText={ touched.fecha_emision ? errors.fecha_emision : \"\" }\r\n                                        error={ touched.fecha_emision && Boolean( errors.fecha_emision ) }\r\n                                        />\r\n                                    </MuiPickersUtilsProvider>\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                    fullWidth\r\n                                    size=\"small\"\r\n                                    label=\"Código de verificación\"\r\n                                    name=\"codigo_verificacion\"\r\n                                    value={ values.codigo_verificacion }\r\n                                    inputProps={ { maxLength: 4, style: { textTransform: 'uppercase' } } }\r\n                                    onBlur={ handleBlur }\r\n                                    onChange={ handleChange }\r\n                                    disabled={ padre.nombre_completo?.length > 0 }\r\n                                    helperText={ touched.codigo_verificacion ? errors.codigo_verificacion : \"\" }\r\n                                    error={ touched.codigo_verificacion && Boolean( errors.codigo_verificacion ) }\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <div className={ classes.wrapper }>\r\n                                        {\r\n                                            ( captcha.imagen )\r\n                                                ? <img src={ captcha.imagen } alt=\"captcha\"/>\r\n                                                : <CircularProgress size={30} className={ classes.captchaProgress } />\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"s-y-3 s-x-1 s-cols-1 \r\n                                                m-y-2 m-x-1 m-cols-2\r\n                                                l-y-2 l-x-1 l-cols-2\">\r\n                                    <MyField name=\"nombre_completo\" />\r\n                                </div>\r\n                                <div>\r\n                                    <TextField\r\n                                    fullWidth\r\n                                    size=\"small\"\r\n                                    label=\"Celular\"\r\n                                    name=\"celular\"\r\n                                    value={ values.celular }\r\n                                    onChange={ handleChange }\r\n                                    onBlur={ handleBlur }\r\n                                    helperText={ touched.celular ? errors.celular : \"\" }\r\n                                    error={ touched.celular && Boolean( errors.celular ) }\r\n                                    InputProps={ { inputComponent: TextNumber } }\r\n                                    disabled={ padre.nombre_completo?.length > 0 }\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <Alerta state={ alert } handleClose={ handleCloseAlert }/>\r\n\r\n                        </AccordionDetails>\r\n                        {\r\n                            padre.nombre_completo?.length === 0\r\n                            ?\r\n                                <>\r\n                                    <Divider />\r\n                                    <StyledAccordionActions> \r\n                                        <Button variant=\"contained\" size=\"large\"\r\n                                        type=\"submit\" disabled={ !isValid || isSubmitting }\r\n                                        color=\"primary\" startIcon={ <SearchIcon /> } >\r\n                                            Buscar\r\n                                        </Button>\r\n                                    </StyledAccordionActions>\r\n                                </>\r\n                            : null\r\n                        }\r\n                    </Accordion>\r\n\r\n                </form>\r\n            ) }\r\n        </Formik>  \r\n    )\r\n}\r\n","import { padreTypes } from \"../../types/padreTypes\"\r\nimport { savePadre, validCodigoVerificacion } from \"../actions/padreActions\"\r\nimport { ProcesoStart, ProcesoEnd } from \"../../controls/Proceso\"\r\nimport { validaDNI } from \"../../helpers/padreHelper\"\r\nimport { Mensaje } from \"../../controls/Mensaje\"\r\nimport { logErrors, MessagesError } from \"../../logErrors\"\r\n\r\nexport const savePadreBD = ( padre ) => {\r\n    return async( dispatch, getState ) => {\r\n        try {\r\n\r\n            const { dni } = getState().padre\r\n\r\n            if ( dni !== padre.dni )\r\n            {\r\n                const { codigo } = getState().captcha\r\n\r\n                if ( padre.codigo_verificacion.toLowerCase() !== codigo.toLowerCase() )\r\n                {\r\n                    dispatch( validCodigoVerificacion( { message: MessagesError.codigo_verificacion, severity: 'error' } ) )\r\n                }\r\n                else{\r\n\r\n                    ProcesoStart()\r\n                    dispatch( savePadre( padre ) )\r\n                    \r\n                    const response = await validaDNI( padre )\r\n\r\n                    if ( response.Validacion !== '' ){\r\n                        dispatch( { type: padreTypes.PADRE_SAVE_ERROR, payload: { message: response.Validacion, severity: 'error' } } );\r\n                    }\r\n                    else{\r\n                        dispatch( { type: padreTypes.PADRE_SAVE_COMPLETE, \r\n                            payload: { ...response.Data, message: 'Se buscó con éxito', severity: 'success' } } );\r\n                    }\r\n\r\n                    ProcesoEnd()\r\n\r\n                }\r\n\r\n            }\r\n        } catch ( e ) {\r\n\r\n            ProcesoEnd()\r\n            dispatch( { type: padreTypes.PADRE_SAVE_ERROR, payload: [] } );\r\n            const err = logErrors( e )\r\n            Mensaje( err.Message, err.Type )\r\n            \r\n        }\r\n        \r\n    }\r\n}","import React from 'react'\r\n\r\nimport { RegistroEstudianteScreen } from './components/estudiante/RegistroEstudianteScreen';\r\nimport { RegistroPadreScreen } from './components/padre/RegistroPadreScreen';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { theme } from './styles/setTheme';\r\n\r\nconst { detect } = require('detect-browser');\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    }\r\n}));\r\n\r\nexport const App = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const browser = detect();\r\n    switch (browser && browser.name) {\r\n        case 'chrome':\r\n        case 'firefox':\r\n            console.log('supported');\r\n            break;\r\n        case 'edge':\r\n            console.log('kinda ok');\r\n            break;\r\n        default:\r\n            console.log('not supported');\r\n    }\r\n\r\n    if (browser) {\r\n        console.log(browser.name, browser.version, browser.os);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ThemeProvider theme={ theme }>\r\n                <div className={ classes.root }>\r\n                    <RegistroPadreScreen/>\r\n                    <RegistroEstudianteScreen/>\r\n                </div>\r\n            </ThemeProvider>\r\n        </>\r\n    )\r\n}","export const padreState = {\r\n    id: '',\r\n    dni: '',\r\n    nombre: '',\r\n    apellido_paterno: '',\r\n    apellido_materno: '',\r\n    nombre_completo: '',\r\n    celular: '',\r\n    existe: false,\r\n    fecha_emision: null,\r\n    codigo_verificacion: '',\r\n    isLoading: false,\r\n    message: '',\r\n    severity: '',\r\n}","export const captchaState = {\r\n    imagen: '',\r\n    codigo: '',\r\n    isLoading: false,\r\n}","export const ubigeoState = {\r\n    listado: [],\r\n    isLoading: false,\r\n    message: '',\r\n    severity: '',\r\n}","export const institucionState = {\r\n    listado: [],\r\n    isLoading: false,\r\n    message: '',\r\n    severity: '',\r\n}","export const estudianteState = {\r\n    id: '',\r\n    nombre: '',\r\n    apellido_paterno: '',\r\n    apellido_materno: '',\r\n    dni: '',\r\n    nivel: '',\r\n    grado: '',\r\n    seccion: '',\r\n    region: '',\r\n    provincia: '',\r\n    distrito: '',\r\n    inst_educativa: '',\r\n    formato: [],\r\n    isLoading: false,\r\n    message: '',\r\n    severity: '',\r\n}","export const preguntaState = {\r\n    grupos: [],\r\n    preguntas: [],\r\n    respuestas: [],\r\n    dependencias: [],\r\n    isLoading: false,\r\n    message: '',\r\n    severity: '',\r\n    isComplete: false\r\n}","export const veeduriaState = {\r\n    padre: {},\r\n    estudiante: {},\r\n    preguntas: [],\r\n    isLoading: false,\r\n    message: '',\r\n    severity: ''\r\n}","export const formatoState = {\r\n    listado: [],\r\n    isLoading: false,\r\n    message: '',\r\n    severity: '',\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport { padreReducer } from \"../reducers/padreReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport { captchaReducer } from \"../reducers/captchaReducer\";\r\nimport { regionReducer, provinciaReducer, distritoReducer } from \"../reducers/ubigeoReducer\";\r\nimport { institucionReducer } from \"../reducers/instEducativaReducer\";\r\nimport { estudianteReducer } from \"../reducers/estudianteReducer\";\r\nimport { preguntaReducer } from \"../reducers/preguntaReducer\";\r\nimport { veeduriaReducer } from \"../reducers/veeduriaReducer\";\r\nimport { formatoReducer } from \"../reducers/formatoReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose\r\n\r\nconst reducers = combineReducers( {\r\n    padre: padreReducer,\r\n    captcha: captchaReducer,\r\n    regiones: regionReducer,\r\n    provincias: provinciaReducer,\r\n    distritos: distritoReducer,\r\n    instituciones: institucionReducer,\r\n    estudiante: estudianteReducer,\r\n    pregunta: preguntaReducer,\r\n    veeduria: veeduriaReducer,\r\n    formatos: formatoReducer,\r\n} );\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers( applyMiddleware( thunk ) )\r\n)","import { padreTypes } from \"../../types/padreTypes\";\r\nimport { padreState } from \"../../states/padreState\";\r\n\r\nexport const padreReducer = ( state = padreState, action ) => {\r\n    switch ( action.type ) {\r\n\t\tcase padreTypes.PADRE_SAVE_START:\r\n            return { ...state, isLoading: true };\r\n\r\n\t\tcase padreTypes.PADRE_SAVE_COMPLETE:\r\n            return { ...state, isLoading: false, ...action.payload };\r\n\r\n        case padreTypes.PADRE_SAVE_ERROR:\r\n            return { ...state, isLoading: false, ...action.payload };\r\n\r\n        case padreTypes.PADRE_VALIDATED:\r\n            return { ...state, isLoading: false, ...action.payload };\r\n            \r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n","import { captchaState } from \"../../states/captchaState\";\r\nimport { captchaTypes } from \"../../types/captchaTypes\";\r\n\r\nexport const captchaReducer = ( state = captchaState, action ) => {\r\n    switch ( action.type ) {\r\n\t\tcase captchaTypes.CAPTCHA_GET_START:\r\n            return { ...state, isLoading: true  };\r\n\r\n\t\tcase captchaTypes.CAPTCHA_GET_COMPLETE:\r\n            return { ...state, isLoading: false, ...action.payload };\r\n\r\n        case captchaTypes.CAPTCHA_GET_ERROR:\r\n            return { ...state, isLoading: false };\r\n            \r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n","import { ubigeoTypes } from \"../../types/ubigeoTypes\";\r\nimport { ubigeoState } from \"../../states/ubigeoState\";\r\n\r\nexport const regionReducer = ( state = ubigeoState, action ) => {\r\n    switch ( action.type ) {\r\n\t\tcase ubigeoTypes.REGION_RESET:\r\n            return { ...state, isLoading: false, listado: [] };\r\n\r\n\t\tcase ubigeoTypes.REGION_GET_START:\r\n            return { ...state, isLoading: true, listado: action.payload };\r\n\r\n\t\tcase ubigeoTypes.REGION_GET_COMPLETE:\r\n            return { ...state, isLoading: false, message: 'Se buscó con éxito', severity: 'success', listado: action.payload };\r\n            \r\n        case ubigeoTypes.REGION_GET_ERROR:\r\n            return { ...state, isLoading: false, listado: action.payload };\r\n\r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n\r\n\r\nexport const provinciaReducer = ( state = ubigeoState, action ) => {\r\n    switch ( action.type ) {\r\n\t\tcase ubigeoTypes.PROVINCIA_RESET:\r\n            return { ...state, isLoading: false, listado: [] };\r\n\r\n\t\tcase ubigeoTypes.PROVINCIA_GET_START:\r\n            return { ...state, isLoading: true, listado: action.payload };\r\n\r\n\t\tcase ubigeoTypes.PROVINCIA_GET_COMPLETE:\r\n            return { ...state, isLoading: false, message: 'Se buscó con éxito', severity: 'success', listado: action.payload };\r\n            \r\n        case ubigeoTypes.PROVINCIA_GET_ERROR:\r\n            return { ...state, isLoading: false, listado: action.payload };\r\n\r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n\r\n\r\nexport const distritoReducer = ( state = ubigeoState, action ) => {\r\n    switch ( action.type ) {\r\n\t\tcase ubigeoTypes.DISTRITO_RESET:\r\n            return { ...state, isLoading: false, listado: [] };\r\n\r\n\t\tcase ubigeoTypes.DISTRITO_GET_START:\r\n            return { ...state, isLoading: true, listado: action.payload };\r\n\r\n\t\tcase ubigeoTypes.DISTRITO_GET_COMPLETE:\r\n            return { ...state, isLoading: false, message: 'Se buscó con éxito', severity: 'success', listado: action.payload };\r\n            \r\n        case ubigeoTypes.DISTRITO_GET_ERROR:\r\n            return { ...state, isLoading: false, listado: action.payload };\r\n\r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n","import { institucionTypes } from \"../../types/instEducativaTypes\";\r\nimport { institucionState } from \"../../states/instEducativaState\";\r\n\r\nexport const institucionReducer = ( state = institucionState, action ) => {\r\n    switch ( action.type ) {\r\n\t\tcase institucionTypes.INSTITUCION_RESET:\r\n            return { ...state, isLoading: false, listado: [] };\r\n\r\n\t\tcase institucionTypes.INSTITUCION_GET_START:\r\n            return { ...state, isLoading: true, listado: action.payload };\r\n\r\n\t\tcase institucionTypes.INSTITUCION_GET_COMPLETE:\r\n            return { ...state, isLoading: false, message: 'Se buscó con éxito', severity: 'success', listado: action.payload };\r\n            \r\n        case institucionTypes.INSTITUCION_GET_ERROR:\r\n            return { ...state, isLoading: false, listado: action.payload };\r\n\r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n","import { estudianteState } from \"../../states/estudianteState\";\r\nimport { estudianteTypes } from \"../../types/estudianteTypes\";\r\n\r\nexport const estudianteReducer = ( state = estudianteState, action ) => {\r\n    switch ( action.type ) {\r\n\t\tcase estudianteTypes.ESTUDIANTE_SAVE_START:\r\n            return { ...state, isLoading: true, message: '' };\r\n\r\n\t\tcase estudianteTypes.ESTUDIANTE_SAVE_COMPLETE:\r\n            return { ...state, isLoading: false, ...action.payload };\r\n\r\n        case estudianteTypes.ESTUDIANTE_SAVE_ERROR:\r\n            return { ...state, isLoading: false, ...action.payload };\r\n\r\n        case estudianteTypes.ESTUDIANTE_VALIDATED:\r\n            return { ...state, isLoading: false, ...action.payload };\r\n            \r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n","import { preguntaTypes } from \"../../types/preguntaTypes\";\r\nimport { preguntaState } from \"../../states/preguntaState\";\r\n\r\nexport const preguntaReducer = ( state = preguntaState, action ) => {\r\n    switch ( action.type ) {\r\n\r\n\t\tcase preguntaTypes.PREGUNTA_GET_START:\r\n            return { ...state, isLoading: true };\r\n\r\n\t\tcase preguntaTypes.PREGUNTA_GET_COMPLETE:\r\n            return { ...state, isLoading: false, message: 'Se buscó con éxito', severity: 'success', ...action.payload };\r\n \r\n\t\tcase preguntaTypes.PREGUNTA_SET_COMPLETE:\r\n            return { ...state, ...action.payload };\r\n\r\n        case preguntaTypes.PREGUNTA_SET_HABILITADO:\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                preguntas: state.preguntas.map(\r\n                    preg => preg.ID === action.payload.ID\r\n                        ? { ...preg , HABILITADO: action.payload.HABILITADO }\r\n                        : preg\r\n                )\r\n            }\r\n            // return { ...state, ...action.payload };\r\n            \r\n        case preguntaTypes.PREGUNTA_GET_ERROR:\r\n            return { ...state, isLoading: false, \r\n                grupos: [],\r\n                preguntas: [],\r\n                respuestas: [],\r\n                dependencias: [],\r\n                ...action.payload };\r\n\r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n","import { veeduriaTypes } from \"../../types/veeduriaTypes\";\r\nimport { veeduriaState } from \"../../states/veeduriaState\";\r\n\r\nexport const veeduriaReducer = ( state = veeduriaState, action ) => {\r\n    switch ( action.type ) {\r\n\r\n\t\tcase veeduriaTypes.VEEDURIA_SAVE_START:\r\n            return { ...state, isLoading: true };\r\n\r\n\t\tcase veeduriaTypes.VEEDURIA_SAVE_COMPLETE:\r\n            return { ...state, isLoading: false, message: 'ok', severity: 'success', ...action.payload };\r\n\r\n        case veeduriaTypes.VEEDURIA_SAVE_ERROR:\r\n            return { ...state, isLoading: false, \r\n                padre: {},\r\n                estudiante: {},\r\n                preguntas: [],\r\n                ...action.payload };\r\n\r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n","import { formatoTypes } from \"../../types/formatoTypes\";\r\nimport { formatoState } from \"../../states/formatoState\";\r\n\r\nexport const formatoReducer = ( state = formatoState, action ) => {\r\n    switch ( action.type ) {\r\n\t\tcase formatoTypes.FORMATO_RESET:\r\n            return { ...state, isLoading: false, listado: [] };\r\n\r\n\t\tcase formatoTypes.FORMATO_GET_START:\r\n            return { ...state, isLoading: true, listado: action.payload };\r\n\r\n\t\tcase formatoTypes.FORMATO_GET_COMPLETE:\r\n            return { ...state, isLoading: false, message: 'Se buscó con éxito', severity: 'success', listado: action.payload };\r\n            \r\n        case formatoTypes.FORMATO_GET_ERROR:\r\n            return { ...state, isLoading: false, listado: action.payload };\r\n\r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport './styles/main.scss';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store/store';\n\nReactDOM.render(\n    <Provider store={ store }>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}